{"version":3,"sources":["components/Editor/index.tsx","components/Provider/index.tsx","components/ContractCodeForm/index.tsx","components/OriginateContractForm/index.tsx","components/Snackbar/Snackbar.tsx","components/SnackbarGroup/index.tsx","components/LastLaunchedContract/index.tsx","components/WizardControls/index.tsx","components/Navbar/index.tsx","utils/set-signer-method.ts","App.tsx","index.tsx"],"names":["Editor","props","code","storage","currentStep","initialCodeValue","length","JSON","stringify","initialStorageValue","id","width","height","mode","theme","tabSize","splits","style","borderRadius","margin","orientation","value","name","editorProps","$blockScrolling","Provider","useForm","register","handleSubmit","useState","providerMsg","setProviderMsg","snackbar","showSnackbar","updateProvider","provider","loading","onSubmit","data","a","rpc","closeSnackbar","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","elevation","variant","severity","onChange","ref","disabled","type","ContractForm","handleNetworkChange","network","updateContractAddress","handleContractSubmit","contractAddress","selectValue","label","charAt","toUpperCase","slice","className","options","selectedOption","placeholder","LaunchForm","updateSigner","handleLaunchSubmit","chosenSigner","setChosenSigner","locallyUpdateSigner","e","currentTarget","onClick","htmlFor","SnackbarComponent","children","duration","reason","SnackbarGroup","txnAddress","error","loadingMessage","launchNetwork","target","rel","href","LastLaunchedContract","lastLaunchedContract","Dots","signer","setCurrentStep","Navbar","alt","src","setSignerMethod","contractNetwork","setLoading","setLoadingMessage","setTxnAddress","handleError","httpClient","HttpBackend","createRequest","url","method","headers","Authorization","pkh","RemoteSigner","Tezos","setSignerProvider","message","setProvider","TezBridgeSigner","contract","originate","init","then","originationOp","address","catch","App","setError","setSigner","setCode","setStorage","setLaunchNetwork","setContractNetwork","setContractAddress","setLastLaunchedContract","useEffect","localStorage","setItem","getItem","handleLaunchNetworkChange","handleContractLaunchSubmit","config","confirmationPollingTimeoutSecond","handleContractCodeSubmit","at","newContract","script","event","ContractCodeForm","WizardControls","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.204267ec.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\nimport { EditorProps } from \"./types\";\nimport { split as SplitEditor } from \"react-ace\";\n\nconst Editor = (props: EditorProps): ReactElement | null => {\n  const { code, storage, currentStep } = props;\n\n  const initialCodeValue = code.length > 0 ? \"// Contract Code \\n\" + JSON.stringify(code, null, 2) : \"// Contract Code\";\n  const initialStorageValue = storage\n    ? \"// Initial Storage Code \\n\" + JSON.stringify(storage, null, 2)\n    : \"// Initial Storage Code \";\n\n  if (currentStep !== 1) return null;\n  return (\n    <>\n      <div id=\"contract-code-editor\">\n        {/* This is because of a types issue on Ace SplitEditor \n            // @ts-ignore */}\n        <SplitEditor\n          width=\"700px\"\n          height=\"300px\"\n          mode=\"json\"\n          theme=\"monokai\"\n          tabSize={2}\n          splits={2}\n          style={{ borderRadius: \"5px\", margin: \"0 auto\" }}\n          orientation=\"beside\"\n          value={[initialCodeValue, initialStorageValue]}\n          name=\"contract-code-editor\"\n          editorProps={{ $blockScrolling: true }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Editor;\n","import React, { useState, ReactElement } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { useForm } from \"react-hook-form\";\nimport { ProviderProps } from \"./types\";\nimport \"../../App.css\";\n\nconst Provider: any = (props: ProviderProps): ReactElement => {\n  const { register, handleSubmit } = useForm();\n  const [providerMsg, setProviderMsg] = useState(\"\");\n  const [snackbar, showSnackbar] = useState(false);\n  const { updateProvider, provider, loading } = props;\n\n  const onSubmit = async (data: any) => {\n    if (data.rpc) {\n      updateProvider(data.rpc);\n    }\n    setProviderMsg(\"Provider set and key file is importing\");\n    showSnackbar(true);\n  };\n\n  const closeSnackbar = () => {\n    showSnackbar(false);\n  };\n\n  return (\n    <div id=\"rpc\">\n      <h3>Provider</h3>\n      {providerMsg && (\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={snackbar}\n          autoHideDuration={3000}\n          onClose={closeSnackbar}\n        >\n          <MuiAlert elevation={6} variant=\"filled\" onClose={closeSnackbar} severity=\"success\">\n            {providerMsg}\n          </MuiAlert>\n        </Snackbar>\n      )}\n      <div id=\"rpc-dialog\">\n        <div id=\"rpc-content\">\n          <div id=\"balance-form\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <input\n                onChange={updateProvider}\n                value={provider || \"https://api.tez.ie/rpc/carthagenet\"}\n                id=\"rpc-input\"\n                name=\"rpc\"\n                ref={register}\n              />\n              <br />\n              <input id=\"show-balance-button\" disabled={loading ? true : false} type=\"submit\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Provider;\n","import React, { ReactElement } from \"react\";\nimport { ContractFormProps } from \"./types\";\nimport Select from \"react-select\";\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nconst ContractForm = (props: ContractFormProps): ReactElement | null => {\n  const {\n    handleNetworkChange,\n    network,\n    updateContractAddress,\n    handleContractSubmit,\n    loading,\n    currentStep,\n    contractAddress,\n  } = props;\n  const { register, handleSubmit } = useForm();\n\n  const selectValue = { value: network, label: network.charAt(0).toUpperCase() + network.slice(1) };\n  const options = [\n    { value: \"mainnet\", label: \"Mainnet\" },\n    { value: \"carthagenet\", label: \"Carthagenet\" },\n    { value: \"sandbox\", label: \"Sandbox\" },\n  ];\n\n  const handleChange = (selectedOption: any) => {\n    handleNetworkChange(selectedOption.value);\n  };\n\n  if (currentStep !== 1) return null;\n  return (\n    <>\n      <div id=\"dialog\">\n        <h2>Lookup Contract Code</h2>\n        <label id=\"react-select-label\">Choose Network</label>\n        <Select className=\"network-select\" options={options} value={selectValue} onChange={handleChange} />\n        <div id=\"content\">\n          <label id=\"react-select-lookup-label\">Enter Contract Address</label>\n          <div id=\"contract-code-form\">\n            <form onSubmit={handleSubmit(handleContractSubmit)}>\n              <input\n                onChange={updateContractAddress}\n                placeholder=\"Contract Address\"\n                id=\"address-input\"\n                name=\"address\"\n                ref={register}\n              />\n              <br />\n              <input disabled={!contractAddress ? true : false} id={`${loading ? \"show-balance-button-hovered\" : \"show-balance-button\"}`} type=\"submit\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContractForm;\n","import React, { ReactElement, useState } from \"react\";\nimport { LaunchFormProps } from \"./types\";\nimport Select from \"react-select\";\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nconst LaunchForm = (props: LaunchFormProps): ReactElement | null => {\n  const { updateSigner, handleNetworkChange, network, handleLaunchSubmit, loading, currentStep } = props;\n  const { register, handleSubmit } = useForm();\n  const [chosenSigner, setChosenSigner] = useState<string>(\"\");\n  const selectValue = { value: network, label: network.charAt(0).toUpperCase() + network.slice(1) };\n\n  const options = [\n    { value: \"mainnet\", label: \"Mainnet\" },\n    { value: \"carthagenet\", label: \"Carthagenet\" },\n    { value: \"sandbox\", label: \"Sandbox\" },\n  ];\n\n  const handleChange = (selectedOption: any) => {\n    handleNetworkChange(selectedOption.value);\n  };\n\n  const locallyUpdateSigner = (e: React.MouseEvent<HTMLInputElement>) => {\n    setChosenSigner(e.currentTarget.value);\n    updateSigner(e);\n  };\n\n  if (currentStep !== 2) return null;\n  return (\n    <>\n      <div id=\"dialog\">\n        <h2>Originate Contract</h2>\n        <label id=\"react-select-label\">Choose Network</label>\n        <Select\n          name=\"address\"\n          ref={register}\n          className=\"network-select\"\n          options={options}\n          value={selectValue}\n          onChange={handleChange}\n        />\n        <label id=\"react-select-signer-label\">Choose Signer</label>\n        <label className=\"signer-toolbar\">\n          {network !== \"mainnet\" && (\n            <>\n              <input onClick={locallyUpdateSigner} value=\"ephemeral\" id=\"ephemeral\" type=\"radio\" />\n              <label\n                className={chosenSigner === \"ephemeral\" ? \"signer-button-selected\" : \"signer-button\"}\n                htmlFor=\"ephemeral\"\n              >\n                Ephemeral Key\n              </label>\n            </>\n          )}\n          <input onClick={locallyUpdateSigner} value=\"beacon\" id=\"beacon\" type=\"radio\" />\n          <label className={chosenSigner === \"beacon\" ? \"signer-button-selected\" : \"signer-button\"} htmlFor=\"beacon\">\n            Beacon\n          </label>\n          <input onClick={locallyUpdateSigner} value=\"tezbridge\" id=\"tezbridge\" type=\"radio\" />\n          <label\n            className={chosenSigner === \"tezbridge\" ? \"signer-button-selected\" : \"signer-button\"}\n            htmlFor=\"tezbridge\"\n          >\n            TezBridge\n          </label>\n        </label>\n        <div id=\"content\">\n          <div id=\"contract-launch-form\">\n            <form onSubmit={handleSubmit(handleLaunchSubmit)}>\n              <input disabled={loading || !chosenSigner ? true : false} id=\"show-balance-button\" type=\"submit\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LaunchForm;\n","import React, { ReactElement } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { SnackbarProps } from \"./types\";\n\nconst SnackbarComponent = (props: SnackbarProps): ReactElement => {\n  const { snackbar, closeSnackbar, type, children, duration } = props;\n\n  const handleClose = (e: any, reason: string) => {\n    if (reason !== \"clickaway\") {\n      closeSnackbar();\n    }\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={snackbar}\n      autoHideDuration={duration === \"none\" ? null : 5000}\n      onClose={handleClose}\n    >\n      <MuiAlert elevation={6} variant=\"filled\" onClose={closeSnackbar} severity={type}>\n        {children}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\nexport default SnackbarComponent;\n","import React, { ReactElement } from \"react\";\nimport Snackbar from \"../Snackbar/Snackbar\";\nimport { SnackbarGroupProps } from \"./types\";\n\nconst SnackbarGroup = (props: SnackbarGroupProps): ReactElement => {\n  const { txnAddress, snackbar, closeSnackbar, error, loading, loadingMessage, launchNetwork } = props;\n\n  return (\n    <>\n      {txnAddress && !loadingMessage && (\n        <Snackbar duration={5000} snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"success\">\n          <>\n            Launched new contract at {txnAddress}\n            <br />\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://${launchNetwork}.tzstats.com/${txnAddress}`}>\n              View on TzStats\n            </a>\n          </>\n        </Snackbar>\n      )}\n      {error && !loadingMessage && (\n        <Snackbar snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"warning\">\n          <>{error}</>\n        </Snackbar>\n      )}\n      {loading && (\n        <Snackbar duration={\"none\"} snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"info\">\n          <>{loadingMessage}</>\n        </Snackbar>\n      )}\n    </>\n  );\n};\n\nexport default SnackbarGroup;\n","import React, { ReactElement } from \"react\";\nimport { LastLaunchedContractProps } from \"./types\";\nimport \"./styles.css\";\n\nconst LastLaunchedContract = (props: LastLaunchedContractProps): ReactElement => {\n  const { lastLaunchedContract } = props;\n\n  return (\n    <div className=\"last-launched-contract-div\">\n      <h3>\n        Last Launched Contract:\n        <div id=\"last-launched-contract\">\n          <h5>{lastLaunchedContract}</h5>\n        </div>\n      </h3>\n    </div>\n  );\n};\n\nexport default LastLaunchedContract;\n","import React, { ReactElement } from \"react\";\nimport { WizardControlsProps } from \"./types\";\nimport \"./styles.css\";\n\nconst Dots = (props: WizardControlsProps): ReactElement => {\n  const { code, signer, currentStep, setCurrentStep } = props;\n\n  return (\n    <div className=\"dots-container\">\n      <span onClick={() => setCurrentStep(1)} className={`${currentStep === 1 ? \"hide-step\" : \"previous-step\"}`}>\n        Prev Step\n      </span>\n      <span className={`${code.length > 0 ? \"dot completed\" : \"dot\"} ${currentStep === 1 ? \"active\" : \"\"}`}>1</span>\n      <span className={` ${signer ? \"dot completed\" : \"dot\"} ${currentStep === 2 ? \"active\" : \"\"}`}>2</span>\n      <button\n        onClick={() => setCurrentStep(2)}\n        disabled={code.length > 0 ? false : true}\n        className={`${currentStep === 2 || code.length === 0 ? \"hide-step\" : \"next-step\"}`}\n      >\n        Next Step\n      </button>\n    </div>\n  );\n};\n\nexport default Dots;\n","import React, { ReactElement } from \"react\";\nimport \"./styles.css\";\n\nconst Navbar = (): ReactElement => {\n  return (\n    <div className=\"navbar\">\n      <div className=\"left-container\">\n        <a href=\"https://github.com/ecadlabs/taquito\">\n          <img height=\"55\" width=\"60\" alt=\"George Cloney logo\" src=\"george-cloney.png\" />\n        </a>\n      </div>\n      <div className=\"right-container\">\n        <a href=\"https://github.com/ecadlabs/bjm\">\n          <img alt=\"Github logo\" height=\"55\" width=\"100\" src=\"github.jpg\" />\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Navbar;\n","import { HttpBackend } from \"@taquito/http-utils\";\nimport { RemoteSigner } from \"@taquito/remote-signer\";\n// import { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { TezBridgeSigner } from \"@taquito/tezbridge-signer\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { MichelsonV1Expression } from \"@taquito/rpc\";\nimport { Dispatch, SetStateAction } from \"react\";\n\nconst setSignerMethod = async (\n  signer: string,\n  contractNetwork: string,\n  launchNetwork: string,\n  code?: any,\n  storage?: any,\n  setLoading?: Dispatch<SetStateAction<boolean>>,\n  showSnackbar?: Dispatch<SetStateAction<boolean>>,\n  setLoadingMessage?: Dispatch<SetStateAction<string>>,\n  setTxnAddress?: Dispatch<SetStateAction<string>>,\n  handleError?: (error: any) => void\n) => {\n  switch (signer) {\n    case \"ephemeral\":\n      try {\n        const httpClient = new HttpBackend();\n        const { id, pkh } = await httpClient.createRequest({\n          url: `https://api.tez.ie/keys/${launchNetwork ? launchNetwork : contractNetwork}/ephemeral`,\n          method: \"POST\",\n          headers: { Authorization: \"Bearer taquito-example\" },\n        });\n        const signer = new RemoteSigner(\n          pkh,\n          `https://api.tez.ie/keys/${launchNetwork ? launchNetwork : contractNetwork}/ephemeral/${id}/`,\n          {\n            headers: { Authorization: \"Bearer taquito-example\" },\n          }\n        );\n        await Tezos.setSignerProvider(signer);\n      } catch (e) {\n        handleError && handleError(e.message);\n      }\n      break;\n\n    case \"tezbridge\":\n      Tezos.setProvider({\n        rpc: `https://api.tez.ie/rpc/${launchNetwork ? launchNetwork : contractNetwork}`,\n        signer: new TezBridgeSigner(),\n      });\n      // Originate a new contract\n      Tezos.contract\n        .originate({\n          code: code as MichelsonV1Expression[],\n          init: storage as MichelsonV1Expression,\n        })\n        .then((originationOp) => {\n          return originationOp.contract();\n        })\n        .then((contract) => {\n          // Remove contract launch snackbar message\n          setLoading && setLoading(false);\n          showSnackbar && showSnackbar(false);\n          // Add block explorer snackbar message\n          setLoadingMessage && setLoadingMessage(\"\");\n          setTxnAddress && setTxnAddress(contract.address);\n          showSnackbar && showSnackbar(true);\n        })\n        .catch((e) => {\n          throw e;\n        });\n      break;\n\n    case \"beacon\":\n      // const wallet = new BeaconWallet({ name: 'test' })\n      // await wallet.requestPermissions()\n      // this.taquito.setProvider({ rpc: this.taquito.rpc, wallet });\n      // }\n      break;\n\n    default:\n      break;\n  }\n};\n\nexport default setSignerMethod;\n","import React, { useState, ReactElement, useEffect } from \"react\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { MichelsonV1Expression } from \"@taquito/rpc\";\nimport Editor from \"./components/Editor\";\nimport Provider from \"./components/Provider\";\nimport ContractCodeForm from \"./components/ContractCodeForm\";\nimport LaunchContractForm from \"./components/OriginateContractForm\";\nimport SnackbarGroup from \"./components/SnackbarGroup\";\nimport LastLaunchedContract from \"./components/LastLaunchedContract\";\nimport WizardControls from \"./components/WizardControls\";\nimport Navbar from \"./components/Navbar\";\nimport setSignerMethod from \"./utils/set-signer-method\";\nimport \"./App.css\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nconst App: React.FC = (): ReactElement => {\n  const [currentStep, setCurrentStep] = useState<number>(1);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingMessage, setLoadingMessage] = useState<string>(\"\");\n  const [error, setError] = useState<string>(\"\");\n  const [snackbar, showSnackbar] = useState<boolean>(false);\n  const [signer, setSigner] = useState<string>(\"\");\n  const [provider, setProvider] = useState<string>(\"\");\n  const [code, setCode] = useState<MichelsonV1Expression[]>([]);\n  const [storage, setStorage] = useState<MichelsonV1Expression | string>();\n  const [launchNetwork, setLaunchNetwork] = useState<string>(\"mainnet\");\n  const [contractNetwork, setContractNetwork] = useState<string>(\"mainnet\");\n  const [contractAddress, setContractAddress] = useState<string>(\"\");\n  const [txnAddress, setTxnAddress] = useState<string>(\"\");\n  const [lastLaunchedContract, setLastLaunchedContract] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (txnAddress) {\n      localStorage.setItem(\"lastLaunchedContract\", txnAddress);\n    }\n    const lastLaunchedContract = localStorage.getItem(\"lastLaunchedContract\") as string;\n    setLastLaunchedContract(lastLaunchedContract);\n  }, [txnAddress]);\n\n  const handleError = (error: any): void => {\n    setLoading(false);\n    showSnackbar(false);\n    setLoadingMessage(\"\");\n    setError(error?.message ?? error);\n    showSnackbar(true);\n  };\n\n  const handleLaunchNetworkChange = async (network: string): Promise<void> => {\n    // Empty provider if network is sandbox so that user can provide a local node address\n    if (network !== \"sandbox\") {\n      await Tezos.setProvider({ rpc: `https://api.tez.ie/rpc/${network}` });\n      setProvider(`https://api.tez.ie/rpc/${network}`);\n    }\n    setLaunchNetwork(network);\n  };\n\n  const handleContractNetworkChange = (network: string): void => {\n    // Empty provider if network is sandbox so that user can provide a local node address\n    if (network === \"sandbox\") {\n      setProvider(\"\");\n    }\n    setProvider(`https://api.tez.ie/rpc/${network}`);\n    setContractNetwork(network);\n  };\n\n  const handleContractLaunchSubmit = async (): Promise<void> => {\n    // Set snackbar\n    setLoading(true);\n    setLoadingMessage(\"Launching contract...\");\n    showSnackbar(true);\n    // Make sure provider is updated to reflect launch network in the UI\n    setProvider(`https://api.tez.ie/rpc/${launchNetwork}`);\n    // Ensure provider is set to Launch Contract div's desired network\n    await Tezos.setProvider({\n      config: { confirmationPollingTimeoutSecond: 60 },\n      rpc: `https://api.tez.ie/rpc/${launchNetwork}`,\n    });\n    await setSignerMethod(\n      signer,\n      contractNetwork,\n      launchNetwork,\n      code,\n      storage,\n      setLoading,\n      showSnackbar,\n      setLoadingMessage,\n      setTxnAddress,\n      handleError\n    );\n    // Tezbridge is originated in setSignerMethod function\n    if (signer !== \"tezbridge\") {\n      // Originate a new contract\n      Tezos.contract\n        .originate({\n          code: code as MichelsonV1Expression[],\n          init: storage as MichelsonV1Expression,\n        })\n        .then((originationOp) => {\n          return originationOp.contract();\n        })\n        .then((contract) => {\n          // Remove contract launch snackbar message\n          setLoading(false);\n          showSnackbar(false);\n          // Add block explorer snackbar message\n          setLoadingMessage(\"\");\n          setTxnAddress(contract.address);\n          showSnackbar(true);\n        })\n        .catch((error) => {\n          setLoading(false);\n          showSnackbar(false);\n          setLoadingMessage(\"\");\n          setError(error?.message ?? error);\n          showSnackbar(true);\n        });\n    }\n  };\n\n  const handleContractCodeSubmit = async (): Promise<any> => {\n    // Grab contracts code from the blockchain and add code to the editors\n    setLoading(true);\n    setLoadingMessage(\"Loading contract code...\");\n    showSnackbar(true);\n    await Tezos.setProvider({ rpc: provider });\n\n    // Call contract and get code\n    const newContract = await Tezos.contract.at(contractAddress);\n    setCode(newContract.script.code);\n    setStorage(newContract.script.storage);\n    setContractAddress(\"\");\n    setLoadingMessage(\"\");\n    setLoading(false);\n  };\n\n  const closeSnackbar = (): void => {\n    // Remove snackbar\n    showSnackbar(false);\n  };\n\n  const updateProvider = async (event: React.ChangeEvent<HTMLInputElement>): Promise<void> => {\n    // Update provider node to use to push/pull data from the blockchain\n    setProvider(event.target.value);\n  };\n\n  const updateContractAddress = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the contract address that we'll be pulling data from\n    setContractAddress(event.target.value);\n  };\n\n  const updateSigner = async (event: React.MouseEvent<HTMLInputElement>): Promise<any> => {\n    // Update the signer method\n    setSigner(event.currentTarget.value);\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div id=\"top-header\">\n        <Provider loading={loading} provider={provider} updateProvider={updateProvider} />\n        {lastLaunchedContract && <LastLaunchedContract lastLaunchedContract={lastLaunchedContract} />}\n      </div>\n      <div id=\"wallet\">\n        <div className=\"title-group\">\n          <h1>The George Cloney</h1>\n          <h4>\n            George Cloney, what a guy, will take any Tezos Smart Contract and copy it for you to any network. He even\n            allows you to edit the cloned contracts storage state! Great for testing and exploring.\n          </h4>\n        </div>\n        <SnackbarGroup\n          launchNetwork={launchNetwork}\n          txnAddress={txnAddress}\n          snackbar={snackbar}\n          closeSnackbar={closeSnackbar}\n          error={error}\n          loading={loading}\n          loadingMessage={loadingMessage}\n        />\n        <div id=\"main-forms\">\n          <ContractCodeForm\n            contractAddress={contractAddress}\n            currentStep={currentStep}\n            loading={loading}\n            handleContractSubmit={handleContractCodeSubmit}\n            updateContractAddress={updateContractAddress}\n            handleNetworkChange={handleContractNetworkChange}\n            network={contractNetwork}\n          />\n          <LaunchContractForm\n            currentStep={currentStep}\n            setCurrentStep={setCurrentStep}\n            loading={loading}\n            signer={signer}\n            updateSigner={updateSigner}\n            handleLaunchSubmit={handleContractLaunchSubmit}\n            handleNetworkChange={handleLaunchNetworkChange}\n            network={launchNetwork}\n          />\n        </div>\n        <WizardControls setCurrentStep={setCurrentStep} currentStep={currentStep} signer={signer} code={code} />\n        <Editor currentStep={currentStep} code={code} storage={storage} />\n      </div>\n      <div className=\"built-with-taquito-logo\">\n        <img height=\"45\" width=\"150\" alt=\"Built with Taquito logo\" src=\"built-with-taquito.png\" />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}