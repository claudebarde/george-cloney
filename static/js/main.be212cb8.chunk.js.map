{"version":3,"sources":["components/StepButtonGroup/index.tsx","components/Editor/index.tsx","components/Provider/index.tsx","components/ContractCodeForm/index.tsx","components/OriginateContractForm/index.tsx","components/Snackbar/Snackbar.tsx","components/SnackbarGroup/index.tsx","components/LastLaunchedContract/index.tsx","components/Navbar/index.tsx","utils/set-signer-method.ts","App.tsx","index.tsx"],"names":["StepButtonGroup","props","currentStep","setCurrentStep","id","style","display","justifyContent","onClick","marginLeft","Editor","code","storage","initialCodeValue","length","JSON","stringify","initialStorageValue","width","height","mode","theme","tabSize","splits","borderRadius","margin","orientation","value","name","editorProps","$blockScrolling","Provider","useForm","register","handleSubmit","useState","providerMsg","setProviderMsg","snackbar","showSnackbar","updateProvider","provider","loading","onSubmit","data","a","rpc","closeSnackbar","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","elevation","variant","severity","onChange","ref","type","ContractForm","handleNetworkChange","network","updateContractAddress","handleContractSubmit","selectValue","label","charAt","toUpperCase","slice","console","log","className","options","selectedOption","placeholder","LaunchForm","signer","updateSigner","handleLaunchSubmit","htmlFor","disabled","SnackbarComponent","children","duration","e","reason","SnackbarGroup","txnAddress","error","loadingMessage","launchNetwork","target","rel","href","LastLaunchedContract","lastLaunchedContract","Navbar","alt","src","setSignerMethod","contractNetwork","setLoading","setLoadingMessage","setTxnAddress","setError","httpClient","HttpBackend","createRequest","url","method","headers","Authorization","pkh","RemoteSigner","Tezos","setSignerProvider","message","setProvider","TezBridgeSigner","contract","originate","init","then","originationOp","address","catch","App","setSigner","setCode","setStorage","setLaunchNetwork","setContractNetwork","contractAddress","setContractAddress","setLastLaunchedContract","useEffect","localStorage","setItem","getItem","handleLaunchNetworkChange","handleContractLaunchSubmit","handleContractCodeSubmit","at","newContract","script","event","currentTarget","ContractCodeForm","ReactDOM","render","document","getElementById"],"mappings":"ihBA4BeA,G,OAxBS,SAACC,GAAsD,IACrEC,EAAgCD,EAAhCC,YAAaC,EAAmBF,EAAnBE,eAErB,OACE,yBAAKC,GAAG,qBACN,0BAAMC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,kBAC7B,IAAhBL,GACC,4BAAQM,QAAS,kBAAML,EAAeD,EAAc,KAApD,QACQA,EAAc,IAAM,EAAI,EAAIA,EAAc,GAGnC,IAAhBA,GACC,4BACEG,MAAO,CAAEI,WAA4B,IAAhBP,EAAoB,QAAU,IACnDM,QAAS,kBAAML,EAAeD,EAAc,KAF9C,QAIQA,EAAc,OCmBjBQ,EAlCA,SAACT,GAAwB,IAC9BU,EAA+CV,EAA/CU,KAAMC,EAAyCX,EAAzCW,QAASV,EAAgCD,EAAhCC,YAAaC,EAAmBF,EAAnBE,eAE9BU,EAAmBF,EAAKG,OAAS,EAAI,sBAAwBC,KAAKC,UAAUL,EAAM,KAAM,GAAK,mBAC7FM,EAAsBL,EACxB,6BAA+BG,KAAKC,UAAUJ,EAAS,KAAM,GAC7D,2BAEJ,OACE,oCACE,kBAAC,EAAD,CAAiBV,YAAaA,EAAaC,eAAgBA,IAC1C,IAAhBD,GACC,yBAAKE,GAAG,wBAGN,kBAAC,QAAD,CACEc,MAAM,QACNC,OAAO,QACPC,KAAK,OACLC,MAAM,UACNC,QAAS,EACTC,OAAQ,EACRlB,MAAO,CAAEmB,aAAc,MAAOC,OAAQ,UACtCC,YAAY,SACZC,MAAO,CAACd,EAAkBI,GAC1BW,KAAK,uBACLC,YAAa,CAAEC,iBAAiB,Q,0BC8B7BC,G,OAtDO,SAAC9B,GAAwC,IAAD,EACzB+B,cAA3BC,EADoD,EACpDA,SAAUC,EAD0C,EAC1CA,aAD0C,EAEtBC,mBAAS,IAFa,mBAErDC,EAFqD,KAExCC,EAFwC,OAG3BF,oBAAS,GAHkB,mBAGrDG,EAHqD,KAG3CC,EAH2C,KAIpDC,EAAsCvC,EAAtCuC,eAAgBC,EAAsBxC,EAAtBwC,SAAUC,EAAYzC,EAAZyC,QAE5BC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACXD,EAAKE,KACPN,EAAeI,EAAKE,KAEtBT,EAAe,0CACfE,GAAa,GALE,2CAAH,sDAQRQ,EAAgB,WACpBR,GAAa,IAGf,OACE,yBAAKnC,GAAG,OACN,wCACCgC,GACC,kBAACY,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMd,EACNe,iBAAkB,IAClBC,QAASP,GAET,kBAAC,IAAD,CAAUQ,UAAW,EAAGC,QAAQ,SAASF,QAASP,EAAeU,SAAS,WACvErB,IAIP,yBAAKhC,GAAG,cACN,yBAAKA,GAAG,eACN,yBAAKA,GAAG,gBACN,0BAAMuC,SAAUT,EAAaS,IAC3B,2BACEe,SAAUlB,EACVb,MAAOc,GAAY,qCACnBrC,GAAG,YACHwB,KAAK,MACL+B,IAAK1B,IAEP,8BACES,GAAW,2BAAOtC,GAAG,sBAAsBwD,KAAK,kB,QCHjDC,G,OA3CM,SAAC5D,GAAmD,IAC/D6D,EAAoG7D,EAApG6D,oBAAqBC,EAA+E9D,EAA/E8D,QAASC,EAAsE/D,EAAtE+D,sBAAuBC,EAA+ChE,EAA/CgE,qBAAsBvB,EAAyBzC,EAAzByC,QAASxC,EAAgBD,EAAhBC,YADtB,EAEnC8B,cAA3BC,EAF8D,EAE9DA,SAAUC,EAFoD,EAEpDA,aAEZgC,EAAc,CAAEvC,MAAOoC,EAASI,MAAOJ,EAAQK,OAAO,GAAGC,cAAgBN,EAAQO,MAAM,IAO7FC,QAAQC,IAAIT,GAMZ,OAAoB,IAAhB7D,EAA0B,KAE5B,oCACE,yBAAKE,GAAG,UACN,iDACA,kBAAC,IAAD,CAAQqE,UAAU,iBAAiBC,QAjBzB,CACd,CAAE/C,MAAO,UAAWwC,MAAO,WAC3B,CAAExC,MAAO,cAAewC,MAAO,eAC/B,CAAExC,MAAO,UAAWwC,MAAO,YAc8BxC,MAAOuC,EAAaR,SAT1D,SAACiB,GACpBb,EAAoBa,EAAehD,UAS/B,yBAAKvB,GAAG,WACN,yBAAKA,GAAG,sBACN,0BAAMuC,SAAUT,EAAa+B,IAC3B,2BACEP,SAAUM,EACVY,YAAY,mBACZxE,GAAG,gBACHwB,KAAK,UACL+B,IAAK1B,IAEP,8BACES,GAAW,2BAAOtC,GAAG,sBAAsBwD,KAAK,kBC4BjDiB,G,OA9DI,SAAC5E,GAAiD,IAC3D6E,EAAiG7E,EAAjG6E,OAAQC,EAAyF9E,EAAzF8E,aAAcjB,EAA2E7D,EAA3E6D,oBAAqBC,EAAsD9D,EAAtD8D,QAASiB,EAA6C/E,EAA7C+E,mBAAoBtC,EAAyBzC,EAAzByC,QAASxC,EAAgBD,EAAhBC,YADvB,EAE/B8B,cAA3BC,EAF0D,EAE1DA,SAAUC,EAFgD,EAEhDA,aAEZgC,EAAc,CAAEvC,MAAOoC,EAASI,MAAOJ,EAAQK,OAAO,GAAGC,cAAgBN,EAAQO,MAAM,IAY7F,OAAoB,IAAhBpE,EAA0B,KAE5B,oCACE,yBAAKE,GAAG,UACN,kDACA,kBAAC,IAAD,CACEwB,KAAK,UACL+B,IAAK1B,EACLwC,UAAU,iBACVC,QAnBQ,CACd,CAAE/C,MAAO,UAAWwC,MAAO,WAC3B,CAAExC,MAAO,cAAewC,MAAO,eAC/B,CAAExC,MAAO,UAAWwC,MAAO,YAiBrBxC,MAAOuC,EACPR,SAfa,SAACiB,GACpBb,EAAoBa,EAAehD,UAgB/B,2BAAO8C,UAAU,kBACF,YAAZV,GACC,oCACE,2BAAOvD,QAASuE,EAAcpD,MAAM,YAAYvB,GAAG,YAAYwD,KAAK,UACpE,2BACEa,UAAsB,cAAXK,EAAyB,yBAA2B,gBAC/DG,QAAQ,aAFV,kBAQJ,2BAAOzE,QAASuE,EAAcpD,MAAM,SAASvB,GAAG,SAASwD,KAAK,UAC9D,2BAAOa,UAAsB,WAAXK,EAAsB,yBAA2B,gBAAiBG,QAAQ,UAA5F,UAGA,2BAAOzE,QAASuE,EAAcpD,MAAM,YAAYvB,GAAG,YAAYwD,KAAK,UACpE,2BAAOa,UAAsB,cAAXK,EAAyB,yBAA2B,gBAAiBG,QAAQ,aAA/F,cAIF,yBAAK7E,GAAG,WACN,yBAAKA,GAAG,wBACN,0BAAMuC,SAAUT,EAAa8C,IAC3B,2BAAOE,WAAUxC,EAAwBtC,GAAG,sBAAsBwD,KAAK,kBChCtEuB,EAtBW,SAAClF,GAAwC,IACzDqC,EAAsDrC,EAAtDqC,SAAUS,EAA4C9C,EAA5C8C,cAAea,EAA6B3D,EAA7B2D,KAAMwB,EAAuBnF,EAAvBmF,SAAUC,EAAapF,EAAboF,SAQjD,OACE,kBAACrC,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMd,EACNe,iBAA+B,SAAbgC,EAAsB,KAAO,IAC/C/B,QAXgB,SAACgC,EAAQC,GACZ,cAAXA,GACFxC,MAWA,kBAAC,IAAD,CAAUQ,UAAW,EAAGC,QAAQ,SAASF,QAASP,EAAeU,SAAUG,GACxEwB,KCYMI,EA9BO,SAACvF,GAA6C,IAC1DwF,EAAuFxF,EAAvFwF,WAAYnD,EAA2ErC,EAA3EqC,SAAUS,EAAiE9C,EAAjE8C,cAAe2C,EAAkDzF,EAAlDyF,MAAOhD,EAA2CzC,EAA3CyC,QAASiD,EAAkC1F,EAAlC0F,eAAgBC,EAAkB3F,EAAlB2F,cAE7E,OACE,oCACGH,IAAeE,GACd,kBAAC,EAAD,CAAUN,SAAU,IAAM/C,SAAUA,EAAUS,cAAeA,EAAea,KAAK,WAC/E,gEAC4B6B,EAC1B,6BACA,uBAAGI,OAAO,SAASC,IAAI,sBAAsBC,KAAI,kBAAaH,EAAb,wBAA0CH,IAA3F,qBAMLC,IAAUC,GACT,kBAAC,EAAD,CAAUrD,SAAUA,EAAUS,cAAeA,EAAea,KAAK,WAC/D,oCAAG8B,IAGNhD,GACC,kBAAC,EAAD,CAAU2C,SAAU,OAAQ/C,SAAUA,EAAUS,cAAeA,EAAea,KAAK,QACjF,oCAAG+B,MCTEK,EAfc,SAAC/F,GAAoD,IACxEgG,EAAyBhG,EAAzBgG,qBAER,OACE,oCACE,sDAEE,yBAAK7F,GAAG,0BACN,4BAAK6F,OCQAC,G,OAhBA,WACb,OACE,yBAAKzB,UAAU,UACb,yBAAKA,UAAU,kBACb,uBAAGsB,KAAK,uCACN,yBAAK5E,OAAO,KAAKD,MAAM,MAAMiF,IAAI,eAAeC,IAAI,kBAGxD,yBAAK3B,UAAU,mBACb,uBAAGsB,KAAK,mCACN,yBAAKI,IAAI,cAAchF,OAAO,KAAKD,MAAM,MAAMkF,IAAI,oB,0BCoE9CC,EA1EM,uCAAG,WACtBvB,EACAwB,EACAV,EACAjF,EACAC,EACA2F,EACAhE,EACAiE,EACAC,EACAC,GAVsB,uBAAA7D,EAAA,2DAYdiC,EAZc,OAaf,cAbe,OAkCf,cAlCe,QA8Df,WA9De,wCAeV6B,EAAa,IAAIC,IAfP,SAgBUD,EAAWE,cAAc,CACjDC,IAAI,2BAAD,OAA6BlB,GAAgCU,EAA7D,cACHS,OAAQ,OACRC,QAAS,CAAEC,cAAe,4BAnBZ,uBAgBR7G,EAhBQ,EAgBRA,GAAI8G,EAhBI,EAgBJA,IAKNpC,EAAS,IAAIqC,IACjBD,EADa,kCAEctB,GAAgCU,EAF9C,sBAE2ElG,EAF3E,KAGb,CACE4G,QAAS,CAAEC,cAAe,4BAzBd,UA4BVG,IAAMC,kBAAkBvC,GA5Bd,0DA8BhB4B,GAAYA,EAAS,KAAEY,SA9BP,mDAmClBF,IAAMG,YAAY,CAChBzE,IAAI,0BAAD,OAA4B8C,GAAgCU,GAC/DxB,OAAQ,IAAI0C,MAGdJ,IAAMK,SACHC,UAAU,CACT/G,KAAMA,EACNgH,KAAM/G,IAEPgH,MAAK,SAACC,GACL,OAAOA,EAAcJ,cAEtBG,MAAK,SAACH,GAELlB,GAAcA,GAAW,GACzBhE,GAAgBA,GAAa,GAE7BiE,GAAqBA,EAAkB,IACvCC,GAAiBA,EAAcgB,EAASK,SACxCvF,GAAgBA,GAAa,MAE9BwF,OAAM,SAACzC,GACN,MAAMA,KA1DQ,2HAAH,wEC+KN0C,G,cAvKO,WAAqB,IAAD,EACF7F,mBAAiB,GADf,mBACjCjC,EADiC,KACpBC,EADoB,OAEVgC,oBAAkB,GAFR,mBAEjCO,EAFiC,KAExB6D,EAFwB,OAGIpE,mBAAiB,IAHrB,mBAGjCwD,EAHiC,KAGjBa,EAHiB,OAIdrE,mBAAiB,IAJH,mBAIjCuD,EAJiC,KAI1BgB,EAJ0B,OAKPvE,oBAAkB,GALX,mBAKjCG,EALiC,KAKvBC,EALuB,OAMZJ,mBAAiB,aANL,mBAMjC2C,EANiC,KAMzBmD,EANyB,OAOR9F,mBAAiB,IAPT,mBAOjCM,EAPiC,KAOvB8E,EAPuB,OAQhBpF,mBAAkC,IARlB,mBAQjCxB,EARiC,KAQ3BuH,EAR2B,OASV/F,qBATU,mBASjCvB,EATiC,KASxBuH,EATwB,OAUEhG,mBAAiB,eAVnB,mBAUjCyD,EAViC,KAUlBwC,EAVkB,QAWMjG,mBAAiB,eAXvB,qBAWjCmE,GAXiC,MAWhB+B,GAXgB,SAYMlG,mBAAiB,IAZvB,qBAYjCmG,GAZiC,MAYhBC,GAZgB,SAaJpG,mBAAiB,IAbb,qBAajCsD,GAbiC,MAarBgB,GAbqB,SAcgBtE,mBAAiB,IAdjC,qBAcjC8D,GAdiC,MAcXuC,GAdW,MAgBxCC,qBAAU,WACJhD,IACFiD,aAAaC,QAAQ,uBAAwBlD,IAE/C,IAAMQ,EAAuByC,aAAaE,QAAQ,wBAClDJ,GAAwBvC,KACvB,CAACR,KAEJ,IAAMoD,GAAyB,uCAAG,WAAO9E,GAAP,SAAAlB,EAAA,yDAEhB,YAAZkB,EAF4B,gCAGxBqD,IAAMG,YAAY,CAAEzE,IAAI,0BAAD,OAA4BiB,KAH3B,OAI9BwD,EAAY,0BAAD,OAA2BxD,IAJR,OAMhCqE,EAAiBrE,GANe,2CAAH,sDAkBzB+E,GAA0B,uCAAG,sBAAAjG,EAAA,6DAEjC0D,GAAW,GACXC,EAAkB,yBAClBjE,GAAa,GAEbgF,EAAY,0BAAD,OAA2B3B,IANL,SAQ3BwB,IAAMG,YAAY,CAAEzE,IAAI,0BAAD,OAA4B8C,KARxB,uBAS3BS,EACJvB,EACAwB,GACAV,EACAjF,EACAC,EACA2F,EACAhE,EACAiE,EACAC,GACAC,GAnB+B,OAsBlB,cAAX5B,GAEFsC,IAAMK,SACHC,UAAU,CACT/G,KAAMA,EACNgH,KAAM/G,IAEPgH,MAAK,SAACC,GACL,OAAOA,EAAcJ,cAEtBG,MAAK,SAACH,GAELlB,GAAW,GACXhE,GAAa,GAEbiE,EAAkB,IAClBC,GAAcgB,EAASK,SACvBvF,GAAa,MAEdwF,OAAM,SAACzC,GAAD,OAAOoB,EAASpB,MAzCM,2CAAH,qDA6C1ByD,GAAwB,uCAAG,4BAAAlG,EAAA,6DAE/B0D,GAAW,GACXC,EAAkB,4BAClBjE,GAAa,GAJkB,SAKzB6E,IAAMG,YAAY,CAAEzE,IAAKL,IALA,uBAMzB4D,EAAgBvB,EAAQwB,GAAiBV,GANhB,uBASLwB,IAAMK,SAASuB,GAAGV,IATb,OASzBW,EATyB,OAU/Bf,EAAQe,EAAYC,OAAOvI,MAC3BwH,EAAWc,EAAYC,OAAOtI,SAC9B4F,EAAkB,IAClBD,GAAW,GAboB,4CAAH,qDAqBxB/D,GAAc,uCAAG,WAAO2G,GAAP,SAAAtG,EAAA,sDAErB0E,EAAY4B,EAAMtD,OAAOlE,OAFJ,2CAAH,sDAUdoD,GAAY,uCAAG,WAAOoE,GAAP,SAAAtG,EAAA,sDAEnBoF,EAAUkB,EAAMC,cAAczH,OAFX,2CAAH,sDAKlB,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKvB,GAAG,cACN,kBAAC,EAAD,CAAUsC,QAASA,EAASD,SAAUA,EAAUD,eAAgBA,KAC/DyD,IAAwB,kBAAC,EAAD,CAAsBA,qBAAsBA,MAEvE,yBAAK7F,GAAG,UACN,iDACA,kBAAC,EAAD,CACEwF,cAAeA,EACfH,WAAYA,GACZnD,SAAUA,EACVS,cAjCc,WAEpBR,GAAa,IAgCPmD,MAAOA,EACPhD,QAASA,EACTiD,eAAgBA,IAElB,yBAAKvF,GAAG,cACN,kBAACiJ,EAAD,CACEnJ,YAAaA,EACbwC,QAASA,EACTuB,qBAAsB8E,GACtB/E,sBAjCoB,SAACmF,GAE7BZ,GAAmBY,EAAMtD,OAAOlE,QAgCxBmC,oBAlH0B,SAACC,GAEnB,YAAZA,GACFwD,EAAY,IAEdA,EAAY,0BAAD,OAA2BxD,IACtCsE,GAAmBtE,IA6GXA,QAASuC,KAEX,kBAAC,EAAD,CACEpG,YAAaA,EACbC,eAAgBA,EAChBuC,QAASA,EACToC,OAAQA,EACRC,aAAcA,GACdC,mBAAoB8D,GACpBhF,oBAAqB+E,GACrB9E,QAAS6B,KAGb,kBAAC,EAAD,CAAQzF,eAAgBA,EAAgBD,YAAaA,EAAaS,KAAMA,EAAMC,QAASA,QC3K/F0I,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.be212cb8.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\nimport { StepButtonGroupProps } from \"./types\";\nimport \"./styles.css\";\n\nconst StepButtonGroup = (props: StepButtonGroupProps): ReactElement | null => {\n  const { currentStep, setCurrentStep } = props;\n\n  return (\n    <div id=\"step-button-group\">\n      <span style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        {currentStep !== 1 && (\n          <button onClick={() => setCurrentStep(currentStep - 1)}>\n            Step {currentStep - 1 === 0 ? 1 : currentStep - 1}\n          </button>\n        )}\n        {currentStep !== 3 && (\n          <button\n            style={{ marginLeft: currentStep === 1 ? \"350px\" : \"\" }}\n            onClick={() => setCurrentStep(currentStep + 1)}\n          >\n            Step {currentStep + 1}\n          </button>\n        )}\n      </span>\n    </div>\n  );\n};\n\nexport default StepButtonGroup;\n","import React from \"react\";\nimport { EditorProps } from \"./types\";\nimport { split as SplitEditor } from \"react-ace\";\nimport StepButtonGroup from \"../StepButtonGroup\";\n\nconst Editor = (props: EditorProps) => {\n  const { code, storage, currentStep, setCurrentStep } = props;\n\n  const initialCodeValue = code.length > 0 ? \"// Contract Code \\n\" + JSON.stringify(code, null, 2) : \"// Contract Code\";\n  const initialStorageValue = storage\n    ? \"// Initial Storage Code \\n\" + JSON.stringify(storage, null, 2)\n    : \"// Initial Storage Code \";\n\n  return (\n    <>\n      <StepButtonGroup currentStep={currentStep} setCurrentStep={setCurrentStep} />\n      {currentStep === 1 && (\n        <div id=\"contract-code-editor\">\n          {/* This is because of a types issue on Ace SplitEditor \n            // @ts-ignore */}\n          <SplitEditor\n            width=\"700px\"\n            height=\"300px\"\n            mode=\"json\"\n            theme=\"monokai\"\n            tabSize={2}\n            splits={2}\n            style={{ borderRadius: \"5px\", margin: \"0 auto\" }}\n            orientation=\"beside\"\n            value={[initialCodeValue, initialStorageValue]}\n            name=\"contract-code-editor\"\n            editorProps={{ $blockScrolling: true }}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Editor;\n","import React, { useState, ReactElement } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { useForm } from \"react-hook-form\";\nimport { ProviderProps } from \"./types\";\nimport \"../../App.css\";\n\nconst Provider: any = (props: ProviderProps): ReactElement => {\n  const { register, handleSubmit } = useForm();\n  const [providerMsg, setProviderMsg] = useState(\"\");\n  const [snackbar, showSnackbar] = useState(false);\n  const { updateProvider, provider, loading } = props;\n\n  const onSubmit = async (data: any) => {\n    if (data.rpc) {\n      updateProvider(data.rpc);\n    }\n    setProviderMsg(\"Provider set and key file is importing\");\n    showSnackbar(true);\n  };\n\n  const closeSnackbar = () => {\n    showSnackbar(false);\n  };\n\n  return (\n    <div id=\"rpc\">\n      <h3>Provider</h3>\n      {providerMsg && (\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={snackbar}\n          autoHideDuration={3000}\n          onClose={closeSnackbar}\n        >\n          <MuiAlert elevation={6} variant=\"filled\" onClose={closeSnackbar} severity=\"success\">\n            {providerMsg}\n          </MuiAlert>\n        </Snackbar>\n      )}\n      <div id=\"rpc-dialog\">\n        <div id=\"rpc-content\">\n          <div id=\"balance-form\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <input\n                onChange={updateProvider}\n                value={provider || \"https://api.tez.ie/rpc/carthagenet\"}\n                id=\"rpc-input\"\n                name=\"rpc\"\n                ref={register}\n              />\n              <br />\n              {!loading && <input id=\"show-balance-button\" type=\"submit\" />}\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Provider;\n","import React, { ReactElement } from \"react\";\nimport { ContractFormProps } from \"./types\";\nimport Select from \"react-select\";\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nconst ContractForm = (props: ContractFormProps): ReactElement | null => {\n  const { handleNetworkChange, network, updateContractAddress, handleContractSubmit, loading, currentStep } = props;\n  const { register, handleSubmit } = useForm();\n\n  const selectValue = { value: network, label: network.charAt(0).toUpperCase() + network.slice(1) };\n  const options = [\n    { value: \"mainnet\", label: \"Mainnet\" },\n    { value: \"carthagenet\", label: \"Carthagenet\" },\n    { value: \"sandbox\", label: \"Sandbox\" },\n  ];\n\n  console.log(network);\n\n  const handleChange = (selectedOption: any) => {\n    handleNetworkChange(selectedOption.value);\n  };\n\n  if (currentStep !== 1) return null;\n  return (\n    <>\n      <div id=\"dialog\">\n        <h2>Get Contract Code</h2>\n        <Select className=\"network-select\" options={options} value={selectValue} onChange={handleChange} />\n        <div id=\"content\">\n          <div id=\"contract-code-form\">\n            <form onSubmit={handleSubmit(handleContractSubmit)}>\n              <input\n                onChange={updateContractAddress}\n                placeholder=\"Contract Address\"\n                id=\"address-input\"\n                name=\"address\"\n                ref={register}\n              />\n              <br />\n              {!loading && <input id=\"show-balance-button\" type=\"submit\" />}\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContractForm;\n","import React, { ReactElement } from \"react\";\nimport { LaunchFormProps } from \"./types\";\nimport Select from \"react-select\";\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nconst LaunchForm = (props: LaunchFormProps): ReactElement | null => {\n  const { signer, updateSigner, handleNetworkChange, network, handleLaunchSubmit, loading, currentStep } = props;\n  const { register, handleSubmit } = useForm();\n\n  const selectValue = { value: network, label: network.charAt(0).toUpperCase() + network.slice(1) };\n\n  const options = [\n    { value: \"mainnet\", label: \"Mainnet\" },\n    { value: \"carthagenet\", label: \"Carthagenet\" },\n    { value: \"sandbox\", label: \"Sandbox\" },\n  ];\n\n  const handleChange = (selectedOption: any) => {\n    handleNetworkChange(selectedOption.value);\n  };\n\n  if (currentStep !== 2) return null;\n  return (\n    <>\n      <div id=\"dialog\">\n        <h2>Originate Contract</h2>\n        <Select\n          name=\"address\"\n          ref={register}\n          className=\"network-select\"\n          options={options}\n          value={selectValue}\n          onChange={handleChange}\n        />\n        <label className=\"signer-toolbar\">\n          {network !== \"mainnet\" && (\n            <>\n              <input onClick={updateSigner} value=\"ephemeral\" id=\"ephemeral\" type=\"radio\" />\n              <label\n                className={signer === \"ephemeral\" ? \"signer-button-selected\" : \"signer-button\"}\n                htmlFor=\"ephemeral\"\n              >\n                Ephemeral Key\n              </label>\n            </>\n          )}\n          <input onClick={updateSigner} value=\"beacon\" id=\"beacon\" type=\"radio\" />\n          <label className={signer === \"beacon\" ? \"signer-button-selected\" : \"signer-button\"} htmlFor=\"beacon\">\n            Beacon\n          </label>\n          <input onClick={updateSigner} value=\"tezbridge\" id=\"tezbridge\" type=\"radio\" />\n          <label className={signer === \"tezbridge\" ? \"signer-button-selected\" : \"signer-button\"} htmlFor=\"tezbridge\">\n            TezBridge\n          </label>\n        </label>\n        <div id=\"content\">\n          <div id=\"contract-launch-form\">\n            <form onSubmit={handleSubmit(handleLaunchSubmit)}>\n              <input disabled={loading ? true : false} id=\"show-balance-button\" type=\"submit\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LaunchForm;\n","import React, { ReactElement } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { SnackbarProps } from \"./types\";\n\nconst SnackbarComponent = (props: SnackbarProps): ReactElement => {\n  const { snackbar, closeSnackbar, type, children, duration } = props;\n\n  const handleClose = (e: any, reason: string) => {\n    if (reason !== \"clickaway\") {\n      closeSnackbar();\n    }\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={snackbar}\n      autoHideDuration={duration === \"none\" ? null : 5000}\n      onClose={handleClose}\n    >\n      <MuiAlert elevation={6} variant=\"filled\" onClose={closeSnackbar} severity={type}>\n        {children}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\nexport default SnackbarComponent;\n","import React, { ReactElement } from \"react\";\nimport Snackbar from \"../Snackbar/Snackbar\";\nimport { SnackbarGroupProps } from \"./types\";\n\nconst SnackbarGroup = (props: SnackbarGroupProps): ReactElement => {\n  const { txnAddress, snackbar, closeSnackbar, error, loading, loadingMessage, launchNetwork } = props;\n\n  return (\n    <>\n      {txnAddress && !loadingMessage && (\n        <Snackbar duration={5000} snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"success\">\n          <>\n            Launched new contract at {txnAddress}\n            <br />\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://${launchNetwork}.tzstats.com/${txnAddress}`}>\n              View on TzStats\n            </a>\n          </>\n        </Snackbar>\n      )}\n      {error && !loadingMessage && (\n        <Snackbar snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"warning\">\n          <>{error}</>\n        </Snackbar>\n      )}\n      {loading && (\n        <Snackbar duration={\"none\"} snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"info\">\n          <>{loadingMessage}</>\n        </Snackbar>\n      )}\n    </>\n  );\n};\n\nexport default SnackbarGroup;\n","import React, { ReactElement } from \"react\";\nimport { LastLaunchedContractProps } from \"./types\";\n\nconst LastLaunchedContract = (props: LastLaunchedContractProps): ReactElement => {\n  const { lastLaunchedContract } = props;\n\n  return (\n    <>\n      <h3>\n        Last Launched Contract:\n        <div id=\"last-launched-contract\">\n          <h5>{lastLaunchedContract}</h5>\n        </div>\n      </h3>\n    </>\n  );\n};\n\nexport default LastLaunchedContract;\n","import React, { ReactElement } from \"react\";\nimport \"./styles.css\";\n\nconst Navbar = (): ReactElement => {\n  return (\n    <div className=\"navbar\">\n      <div className=\"left-container\">\n        <a href=\"https://github.com/ecadlabs/taquito\">\n          <img height=\"45\" width=\"150\" alt=\"Taquito logo\" src=\"taquito.png\" />\n        </a>\n      </div>\n      <div className=\"right-container\">\n        <a href=\"https://github.com/ecadlabs/bjm\">\n          <img alt=\"Github logo\" height=\"55\" width=\"100\" src=\"github.jpg\" />\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Navbar;\n","import { HttpBackend } from \"@taquito/http-utils\";\nimport { RemoteSigner } from \"@taquito/remote-signer\";\n// import { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { TezBridgeSigner } from \"@taquito/tezbridge-signer\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { Dispatch, SetStateAction } from \"react\";\n\nconst setSignerMethod = async (\n  signer: string,\n  contractNetwork: string,\n  launchNetwork: string,\n  code?: any,\n  storage?: any,\n  setLoading?: Dispatch<SetStateAction<boolean>>,\n  showSnackbar?: Dispatch<SetStateAction<boolean>>,\n  setLoadingMessage?: Dispatch<SetStateAction<string>>,\n  setTxnAddress?: Dispatch<SetStateAction<string>>,\n  setError?: Dispatch<SetStateAction<string>>\n) => {\n  switch (signer) {\n    case \"ephemeral\":\n      try {\n        const httpClient = new HttpBackend();\n        const { id, pkh } = await httpClient.createRequest({\n          url: `https://api.tez.ie/keys/${launchNetwork ? launchNetwork : contractNetwork}/ephemeral`,\n          method: \"POST\",\n          headers: { Authorization: \"Bearer taquito-example\" },\n        });\n        const signer = new RemoteSigner(\n          pkh,\n          `https://api.tez.ie/keys/${launchNetwork ? launchNetwork : contractNetwork}/ephemeral/${id}/`,\n          {\n            headers: { Authorization: \"Bearer taquito-example\" },\n          }\n        );\n        await Tezos.setSignerProvider(signer);\n      } catch (e) {\n        setError && setError(e.message);\n      }\n      break;\n\n    case \"tezbridge\":\n      Tezos.setProvider({\n        rpc: `https://api.tez.ie/rpc/${launchNetwork ? launchNetwork : contractNetwork}`,\n        signer: new TezBridgeSigner(),\n      });\n      // Originate a new contract\n      Tezos.contract\n        .originate({\n          code: code as any,\n          init: storage as any,\n        })\n        .then((originationOp) => {\n          return originationOp.contract();\n        })\n        .then((contract) => {\n          // Remove contract launch snackbar message\n          setLoading && setLoading(false);\n          showSnackbar && showSnackbar(false);\n          // Add block explorer snackbar message\n          setLoadingMessage && setLoadingMessage(\"\");\n          setTxnAddress && setTxnAddress(contract.address);\n          showSnackbar && showSnackbar(true);\n        })\n        .catch((e) => {\n          throw e;\n        });\n      break;\n\n    case \"beacon\":\n      // const wallet = new BeaconWallet({ name: 'test' })\n      // await wallet.requestPermissions()\n      // this.taquito.setProvider({ rpc: this.taquito.rpc, wallet });\n      // }\n      break;\n\n    default:\n      break;\n  }\n};\n\nexport default setSignerMethod;\n","import React, { useState, ReactElement, useEffect } from \"react\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { MichelsonV1Expression } from \"@taquito/rpc\";\nimport Editor from \"./components/Editor\";\nimport Provider from \"./components/Provider\";\nimport ContractCodeForm from \"./components/ContractCodeForm\";\nimport LaunchContractForm from \"./components/OriginateContractForm\";\nimport SnackbarGroup from \"./components/SnackbarGroup\";\nimport LastLaunchedContract from \"./components/LastLaunchedContract\";\nimport Navbar from \"./components/Navbar\";\nimport setSignerMethod from \"./utils/set-signer-method\";\nimport \"./App.css\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nconst App: React.FC = (): ReactElement => {\n  const [currentStep, setCurrentStep] = useState<number>(1);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingMessage, setLoadingMessage] = useState<string>(\"\");\n  const [error, setError] = useState<string>(\"\");\n  const [snackbar, showSnackbar] = useState<boolean>(false);\n  const [signer, setSigner] = useState<string>(\"ephemeral\");\n  const [provider, setProvider] = useState<string>(\"\");\n  const [code, setCode] = useState<MichelsonV1Expression[]>([]);\n  const [storage, setStorage] = useState<MichelsonV1Expression | string>();\n  const [launchNetwork, setLaunchNetwork] = useState<string>(\"carthagenet\");\n  const [contractNetwork, setContractNetwork] = useState<string>(\"carthagenet\");\n  const [contractAddress, setContractAddress] = useState<string>(\"\");\n  const [txnAddress, setTxnAddress] = useState<string>(\"\");\n  const [lastLaunchedContract, setLastLaunchedContract] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (txnAddress) {\n      localStorage.setItem(\"lastLaunchedContract\", txnAddress);\n    }\n    const lastLaunchedContract = localStorage.getItem(\"lastLaunchedContract\") as string;\n    setLastLaunchedContract(lastLaunchedContract);\n  }, [txnAddress]);\n\n  const handleLaunchNetworkChange = async (network: string): Promise<void> => {\n    // Empty provider if network is sandbox so that user can provide a local node address\n    if (network !== \"sandbox\") {\n      await Tezos.setProvider({ rpc: `https://api.tez.ie/rpc/${network}` });\n      setProvider(`https://api.tez.ie/rpc/${network}`);\n    }\n    setLaunchNetwork(network);\n  };\n\n  const handleContractNetworkChange = (network: string): void => {\n    // Empty provider if network is sandbox so that user can provide a local node address\n    if (network === \"sandbox\") {\n      setProvider(\"\");\n    }\n    setProvider(`https://api.tez.ie/rpc/${network}`);\n    setContractNetwork(network);\n  };\n\n  const handleContractLaunchSubmit = async (): Promise<void> => {\n    // Set snackbar\n    setLoading(true);\n    setLoadingMessage(\"Launching contract...\");\n    showSnackbar(true);\n    // Make sure provider is updated to reflect launch network in the UI\n    setProvider(`https://api.tez.ie/rpc/${launchNetwork}`);\n    // Ensure provider is set to Launch Contract div's desired network\n    await Tezos.setProvider({ rpc: `https://api.tez.ie/rpc/${launchNetwork}` });\n    await setSignerMethod(\n      signer,\n      contractNetwork,\n      launchNetwork,\n      code,\n      storage,\n      setLoading,\n      showSnackbar,\n      setLoadingMessage,\n      setTxnAddress,\n      setError\n    );\n    // Tezbridge is originated in setSignerMethod function\n    if (signer !== \"tezbridge\") {\n      // Originate a new contract\n      Tezos.contract\n        .originate({\n          code: code as any,\n          init: storage as any,\n        })\n        .then((originationOp) => {\n          return originationOp.contract();\n        })\n        .then((contract) => {\n          // Remove contract launch snackbar message\n          setLoading(false);\n          showSnackbar(false);\n          // Add block explorer snackbar message\n          setLoadingMessage(\"\");\n          setTxnAddress(contract.address);\n          showSnackbar(true);\n        })\n        .catch((e) => setError(e));\n    }\n  };\n\n  const handleContractCodeSubmit = async (): Promise<any> => {\n    // Grab contracts code from the blockchain and add code to the editors\n    setLoading(true);\n    setLoadingMessage(\"Loading contract code...\");\n    showSnackbar(true);\n    await Tezos.setProvider({ rpc: provider });\n    await setSignerMethod(signer, contractNetwork, launchNetwork);\n\n    // Call contract and get code\n    const newContract = await Tezos.contract.at(contractAddress);\n    setCode(newContract.script.code);\n    setStorage(newContract.script.storage);\n    setLoadingMessage(\"\");\n    setLoading(false);\n  };\n\n  const closeSnackbar = (): void => {\n    // Remove snackbar\n    showSnackbar(false);\n  };\n\n  const updateProvider = async (event: React.ChangeEvent<HTMLInputElement>): Promise<void> => {\n    // Update provider node to use to push/pull data from the blockchain\n    setProvider(event.target.value);\n  };\n\n  const updateContractAddress = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the contract address that we'll be pulling data from\n    setContractAddress(event.target.value);\n  };\n\n  const updateSigner = async (event: React.MouseEvent<HTMLInputElement>): Promise<any> => {\n    // Update the signer method\n    setSigner(event.currentTarget.value);\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div id=\"top-header\">\n        <Provider loading={loading} provider={provider} updateProvider={updateProvider} />\n        {lastLaunchedContract && <LastLaunchedContract lastLaunchedContract={lastLaunchedContract} />}\n      </div>\n      <div id=\"wallet\">\n        <h1>The George Cloney</h1>\n        <SnackbarGroup\n          launchNetwork={launchNetwork}\n          txnAddress={txnAddress}\n          snackbar={snackbar}\n          closeSnackbar={closeSnackbar}\n          error={error}\n          loading={loading}\n          loadingMessage={loadingMessage}\n        />\n        <div id=\"main-forms\">\n          <ContractCodeForm\n            currentStep={currentStep}\n            loading={loading}\n            handleContractSubmit={handleContractCodeSubmit}\n            updateContractAddress={updateContractAddress}\n            handleNetworkChange={handleContractNetworkChange}\n            network={contractNetwork}\n          />\n          <LaunchContractForm\n            currentStep={currentStep}\n            setCurrentStep={setCurrentStep}\n            loading={loading}\n            signer={signer}\n            updateSigner={updateSigner}\n            handleLaunchSubmit={handleContractLaunchSubmit}\n            handleNetworkChange={handleLaunchNetworkChange}\n            network={launchNetwork}\n          />\n        </div>\n        <Editor setCurrentStep={setCurrentStep} currentStep={currentStep} code={code} storage={storage} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}