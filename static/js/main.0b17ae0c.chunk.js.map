{"version":3,"sources":["components/Provider/index.tsx","components/ContractForm/index.tsx","components/LaunchForm/index.tsx","components/Snackbar/Snackbar.tsx","components/SnackbarGroup/index.tsx","components/LastLaunchedContract/index.tsx","components/Navbar/index.tsx","utils/set-signer-method.ts","App.tsx","index.tsx"],"names":["Provider","props","useForm","register","handleSubmit","useState","providerMsg","setProviderMsg","snackbar","showSnackbar","updateProvider","provider","loading","onSubmit","data","a","rpc","closeSnackbar","id","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","elevation","variant","severity","onChange","value","name","ref","type","ContractForm","handleNetworkChange","network","updateContractAddress","handleContractSubmit","selectValue","label","charAt","toUpperCase","slice","className","options","selectedOption","placeholder","LaunchForm","handleLaunchSubmit","updateSigner","signer","onClick","htmlFor","disabled","SnackbarComponent","children","duration","e","reason","SnackbarGroup","txnAddress","error","loadingMessage","launchNetwork","target","rel","href","LastLaunchedContract","lastLaunchedContract","Navbar","height","width","alt","src","setSignerMethod","contractNetwork","code","storage","setLoading","setLoadingMessage","setTxnAddress","setError","httpClient","HttpBackend","createRequest","url","method","headers","Authorization","pkh","RemoteSigner","Tezos","setSignerProvider","message","setProvider","TezBridgeSigner","contract","originate","init","then","originationOp","address","catch","App","setCode","setStorage","setLaunchNetwork","setContractNetwork","contractAddress","setContractAddress","setSigner","setLastLaunchedContract","useEffect","localStorage","setItem","getItem","handleLaunchNetworkChange","handleContractLaunchSubmit","handleContractCodeSubmit","at","newContract","script","event","currentTarget","initialCodeValue","length","JSON","stringify","initialStorageValue","mode","theme","tabSize","splits","style","borderRadius","margin","orientation","editorProps","$blockScrolling","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b17ae0c.chunk.js","sourcesContent":["import React, { useState, ReactElement } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { useForm } from \"react-hook-form\";\nimport { ProviderProps } from \"./types\";\nimport \"../../App.css\";\n\nconst Provider: any = (props: ProviderProps): ReactElement => {\n  const { register, handleSubmit } = useForm();\n  const [providerMsg, setProviderMsg] = useState(\"\");\n  const [snackbar, showSnackbar] = useState(false);\n  const { updateProvider, provider, loading } = props;\n\n  const onSubmit = async (data: any) => {\n    if (data.rpc) {\n      updateProvider(data.rpc);\n    }\n    setProviderMsg(\"Provider set and key file is importing\");\n    showSnackbar(true);\n  };\n\n  const closeSnackbar = () => {\n    showSnackbar(false);\n  };\n\n  return (\n    <div id=\"rpc\">\n      <h3>Provider</h3>\n      {providerMsg && (\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={snackbar}\n          autoHideDuration={3000}\n          onClose={closeSnackbar}\n        >\n          <MuiAlert elevation={6} variant=\"filled\" onClose={closeSnackbar} severity=\"success\">\n            {providerMsg}\n          </MuiAlert>\n        </Snackbar>\n      )}\n      <div id=\"rpc-dialog\">\n        <div id=\"rpc-content\">\n          <div id=\"balance-form\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <input\n                onChange={updateProvider}\n                value={provider || \"https://api.tez.ie/rpc/carthagenet\"}\n                id=\"rpc-input\"\n                name=\"rpc\"\n                ref={register}\n              />\n              <br />\n              {!loading && <input id=\"show-balance-button\" type=\"submit\" />}\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Provider;\n","import React, { ReactElement } from \"react\";\nimport { ContractFormProps } from \"./types\";\nimport Select from \"react-select\";\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nconst ContractForm = (props: ContractFormProps): ReactElement => {\n  const { handleNetworkChange, network, updateContractAddress, handleContractSubmit, loading } = props;\n  const { register, handleSubmit } = useForm();\n\n  const selectValue = { value: network, label: network.charAt(0).toUpperCase() + network.slice(1) };\n  const options = [\n    { value: \"mainnet\", label: \"Mainnet\" },\n    { value: \"carthagenet\", label: \"Carthagenet\" },\n    { value: \"sandbox\", label: \"Sandbox\" },\n  ];\n\n  const handleChange = (selectedOption: any) => {\n    handleNetworkChange(selectedOption.value);\n  };\n\n  return (\n    <>\n      <div id=\"dialog\">\n        <h2>Get Contract Code</h2>\n        <Select className=\"network-select\" options={options} value={selectValue} onChange={handleChange} />\n        <div id=\"content\">\n          <div id=\"contract-code-form\">\n            <form onSubmit={handleSubmit(handleContractSubmit)}>\n              <input\n                onChange={updateContractAddress}\n                placeholder=\"Contract Address\"\n                id=\"address-input\"\n                name=\"address\"\n                ref={register}\n              />\n              <br />\n              {!loading && <input id=\"show-balance-button\" type=\"submit\" />}\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContractForm;\n","import React, { ReactElement } from \"react\";\nimport { LaunchFormProps } from \"./types\";\nimport Select from \"react-select\";\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nconst LaunchForm = (props: LaunchFormProps): ReactElement => {\n  const { handleNetworkChange, network, handleLaunchSubmit, updateSigner, signer, loading } = props;\n  const { register, handleSubmit } = useForm();\n\n  const selectValue = { value: network, label: network.charAt(0).toUpperCase() + network.slice(1) };\n\n  const options = [\n    { value: \"mainnet\", label: \"Mainnet\" },\n    { value: \"carthagenet\", label: \"Carthagenet\" },\n    { value: \"sandbox\", label: \"Sandbox\" },\n  ];\n\n  const handleChange = (selectedOption: any) => {\n    handleNetworkChange(selectedOption.value);\n  };\n\n  return (\n    <>\n      <div id=\"dialog\">\n        <h2>Launch Contract</h2>\n        <Select\n          name=\"address\"\n          ref={register}\n          className=\"network-select\"\n          options={options}\n          value={selectValue}\n          onChange={handleChange}\n        />\n        <div id=\"content\">\n          <div id=\"contract-launch-form\">\n            <form onSubmit={handleSubmit(handleLaunchSubmit)}>\n              <span className=\"signer-toolbar\">\n                <input onClick={updateSigner} value=\"ephemeral\" id=\"ephemeral\" type=\"radio\" />\n                <label\n                  className={signer === \"ephemeral\" ? \"signer-button-selected\" : \"signer-button\"}\n                  htmlFor=\"ephemeral\"\n                >\n                  Ephemeral Key\n                </label>\n                <input onClick={updateSigner} value=\"tezbridge\" id=\"tezbridge\" type=\"radio\" />\n                <label\n                  className={signer === \"tezbridge\" ? \"signer-button-selected\" : \"signer-button\"}\n                  htmlFor=\"tezbridge\"\n                >\n                  TezBridge\n                </label>\n                <input onClick={updateSigner} value=\"beacon\" id=\"beacon\" type=\"radio\" />\n                <label className={signer === \"beacon\" ? \"signer-button-selected\" : \"signer-button\"} htmlFor=\"beacon\">\n                  Beacon\n                </label>\n              </span>\n              <input disabled={loading ? true : false} id=\"show-balance-button\" type=\"submit\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LaunchForm;\n","import React, { ReactElement } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { SnackbarProps } from \"./types\";\n\nconst SnackbarComponent = (props: SnackbarProps): ReactElement => {\n  const { snackbar, closeSnackbar, type, children, duration } = props;\n\n  const handleClose = (e: any, reason: string) => {\n    if (reason !== \"clickaway\") {\n      closeSnackbar();\n    }\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={snackbar}\n      autoHideDuration={duration === \"none\" ? null : 5000}\n      onClose={handleClose}\n    >\n      <MuiAlert elevation={6} variant=\"filled\" onClose={closeSnackbar} severity={type}>\n        {children}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\nexport default SnackbarComponent;\n","import React, { ReactElement } from \"react\";\nimport Snackbar from \"../Snackbar/Snackbar\";\nimport { SnackbarGroupProps } from \"./types\";\n\nconst SnackbarGroup = (props: SnackbarGroupProps): ReactElement => {\n  const { txnAddress, snackbar, closeSnackbar, error, loading, loadingMessage, launchNetwork } = props;\n\n  return (\n    <>\n      {txnAddress && !loadingMessage && (\n        <Snackbar duration={5000} snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"success\">\n          <>\n            Launched new contract at {txnAddress}\n            <br />\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://${launchNetwork}.tzstats.com/${txnAddress}`}>\n              View on TzStats\n            </a>\n          </>\n        </Snackbar>\n      )}\n      {error && !loadingMessage && (\n        <Snackbar snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"warning\">\n          <>{error}</>\n        </Snackbar>\n      )}\n      {loading && (\n        <Snackbar duration={\"none\"} snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"info\">\n          <>{loadingMessage}</>\n        </Snackbar>\n      )}\n    </>\n  );\n};\n\nexport default SnackbarGroup;\n","import React, { ReactElement } from \"react\";\nimport { LastLaunchedContractProps } from \"./types\";\n\nconst LastLaunchedContract = (props: LastLaunchedContractProps): ReactElement => {\n  const { lastLaunchedContract } = props;\n\n  return (\n    <>\n      <h3>\n        Last Launched Contract:\n        <div id=\"last-launched-contract\">\n          <h5>{lastLaunchedContract}</h5>\n        </div>\n      </h3>\n    </>\n  );\n};\n\nexport default LastLaunchedContract;\n","import React, { ReactElement } from \"react\";\nimport \"./styles.css\";\n\nconst Navbar = (): ReactElement => {\n  return (\n    <div className=\"navbar\">\n      <div className=\"left-container\">\n        <a href=\"https://github.com/ecadlabs/taquito\">\n          <img height=\"45\" width=\"150\" alt=\"Taquito logo\" src=\"taquito.png\" />\n        </a>\n      </div>\n      <div className=\"right-container\">\n        <a href=\"https://github.com/ecadlabs/bjm\">\n          <img alt=\"Github logo\" height=\"55\" width=\"100\" src=\"github.jpg\" />\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Navbar;\n","import { HttpBackend } from \"@taquito/http-utils\";\nimport { RemoteSigner } from \"@taquito/remote-signer\";\n// import { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { TezBridgeSigner } from \"@taquito/tezbridge-signer\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { Dispatch, SetStateAction } from \"react\";\n\nconst setSignerMethod = async (\n  signer: string,\n  contractNetwork: string,\n  launchNetwork: string,\n  code?: any,\n  storage?: any,\n  setLoading?: Dispatch<SetStateAction<boolean>>,\n  showSnackbar?: Dispatch<SetStateAction<boolean>>,\n  setLoadingMessage?: Dispatch<SetStateAction<string>>,\n  setTxnAddress?: Dispatch<SetStateAction<string>>,\n  setError?: Dispatch<SetStateAction<string>>\n) => {\n  switch (signer) {\n    case \"ephemeral\":\n      try {\n        const httpClient = new HttpBackend();\n        const { id, pkh } = await httpClient.createRequest({\n          url: `https://api.tez.ie/keys/${launchNetwork ? launchNetwork : contractNetwork}/ephemeral`,\n          method: \"POST\",\n          headers: { Authorization: \"Bearer taquito-example\" },\n        });\n        const signer = new RemoteSigner(\n          pkh,\n          `https://api.tez.ie/keys/${launchNetwork ? launchNetwork : contractNetwork}/ephemeral/${id}/`,\n          {\n            headers: { Authorization: \"Bearer taquito-example\" },\n          }\n        );\n        await Tezos.setSignerProvider(signer);\n      } catch (e) {\n        setError && setError(e.message);\n      }\n      break;\n\n    case \"tezbridge\":\n      Tezos.setProvider({\n        rpc: `https://api.tez.ie/rpc/${launchNetwork ? launchNetwork : contractNetwork}`,\n        signer: new TezBridgeSigner(),\n      });\n      // Originate a new contract\n      Tezos.contract\n        .originate({\n          code: code as any,\n          init: storage as any,\n        })\n        .then((originationOp) => {\n          return originationOp.contract();\n        })\n        .then((contract) => {\n          // Remove contract launch snackbar message\n          setLoading && setLoading(false);\n          showSnackbar && showSnackbar(false);\n          // Add block explorer snackbar message\n          setLoadingMessage && setLoadingMessage(\"\");\n          setTxnAddress && setTxnAddress(contract.address);\n          showSnackbar && showSnackbar(true);\n        })\n        .catch((e) => {\n          throw e;\n        });\n      break;\n\n    case \"beacon\":\n      // const wallet = new BeaconWallet({ name: 'test' })\n      // await wallet.requestPermissions()\n      // this.taquito.setProvider({ rpc: this.taquito.rpc, wallet });\n      // }\n      break;\n\n    default:\n      break;\n  }\n};\n\nexport default setSignerMethod;\n","import React, { useState, ReactElement, useEffect } from \"react\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { MichelsonV1Expression } from \"@taquito/rpc\";\nimport { split as SplitEditor } from \"react-ace\";\nimport Provider from \"./components/Provider\";\nimport ContractForm from \"./components/ContractForm\";\nimport LaunchForm from \"./components/LaunchForm\";\nimport SnackbarGroup from \"./components/SnackbarGroup\";\nimport LastLaunchedContract from \"./components/LastLaunchedContract\";\nimport Navbar from \"./components/Navbar\";\nimport setSignerMethod from \"./utils/set-signer-method\";\nimport \"./App.css\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nconst App: React.FC = (): ReactElement => {\n  const [txnAddress, setTxnAddress] = useState(\"\");\n  const [code, setCode] = useState<MichelsonV1Expression[]>([]);\n  const [storage, setStorage] = useState<MichelsonV1Expression | string>();\n  const [launchNetwork, setLaunchNetwork] = useState<string>(\"carthagenet\");\n  const [contractNetwork, setContractNetwork] = useState<string>(\"carthagenet\");\n  const [contractAddress, setContractAddress] = useState<string>(\"\");\n  const [signer, setSigner] = useState<string>(\"ephemeral\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingMessage, setLoadingMessage] = useState<string>(\"\");\n  const [provider, setProvider] = useState<string>(\"\");\n  const [error, setError] = useState<string>(\"\");\n  const [snackbar, showSnackbar] = useState<boolean>(false);\n  const [lastLaunchedContract, setLastLaunchedContract] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (txnAddress) {\n      localStorage.setItem(\"lastLaunchedContract\", txnAddress);\n    }\n    const lastLaunchedContract = localStorage.getItem(\"lastLaunchedContract\") as string;\n    setLastLaunchedContract(lastLaunchedContract);\n  }, [txnAddress]);\n\n  const handleLaunchNetworkChange = async (network: string): Promise<void> => {\n    // Empty provider if network is sandbox so that user can provide a local node address\n    if (network !== \"sandbox\") {\n      await Tezos.setProvider({ rpc: `https://api.tez.ie/rpc/${network}` });\n      setProvider(`https://api.tez.ie/rpc/${network}`);\n    }\n    setProvider(network);\n    setLaunchNetwork(network);\n  };\n\n  const handleContractNetworkChange = (network: string): void => {\n    // Empty provider if network is sandbox so that user can provide a local node address\n    if (network === \"sandbox\") {\n      setProvider(\"\");\n    }\n    setProvider(`https://api.tez.ie/rpc/${network}`);\n    setContractNetwork(network);\n  };\n\n  const handleContractLaunchSubmit = async (): Promise<void> => {\n    // Set snackbar\n    setLoading(true);\n    setLoadingMessage(\"Launching contract...\");\n    showSnackbar(true);\n    // Make sure provider is updated to reflect launch network in the UI\n    setProvider(`https://api.tez.ie/rpc/${launchNetwork}`);\n    // Ensure provider is set to Launch Contract div's desired network\n    await Tezos.setProvider({ rpc: `https://api.tez.ie/rpc/${launchNetwork}` });\n    await setSignerMethod(\n      signer,\n      contractNetwork,\n      launchNetwork,\n      code,\n      storage,\n      setLoading,\n      showSnackbar,\n      setLoadingMessage,\n      setTxnAddress,\n      setError\n    );\n    // Tezbridge is originated in setSignerMethod function\n    if (signer !== \"tezbridge\") {\n      // Originate a new contract\n      Tezos.contract\n        .originate({\n          code: code as any,\n          init: storage as any,\n        })\n        .then((originationOp) => {\n          return originationOp.contract();\n        })\n        .then((contract) => {\n          // Remove contract launch snackbar message\n          setLoading(false);\n          showSnackbar(false);\n          // Add block explorer snackbar message\n          setLoadingMessage(\"\");\n          setTxnAddress(contract.address);\n          showSnackbar(true);\n        });\n    }\n  };\n\n  const handleContractCodeSubmit = async (): Promise<any> => {\n    // Grab contracts code from the blockchain and add code to the editors\n    setLoading(true);\n    setLoadingMessage(\"Loading contract code...\");\n    showSnackbar(true);\n    await Tezos.setProvider({ rpc: provider });\n    await setSignerMethod(signer, contractNetwork, launchNetwork);\n\n    // Call contract and get code\n    const newContract = await Tezos.contract.at(contractAddress);\n    setCode(newContract.script.code);\n    setStorage(newContract.script.storage);\n    setLoadingMessage(\"\");\n    setLoading(false);\n  };\n\n  const closeSnackbar = (): void => {\n    // Remove snackbar\n    showSnackbar(false);\n  };\n\n  const updateProvider = async (event: React.ChangeEvent<HTMLInputElement>): Promise<void> => {\n    // Update provider node to use to push/pull data from the blockchain\n    setProvider(event.target.value);\n  };\n\n  const updateContractAddress = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the contract address that we'll be pulling data from\n    setContractAddress(event.target.value);\n  };\n\n  const updateSigner = async (event: React.MouseEvent<HTMLInputElement>): Promise<any> => {\n    // Update the signer method\n    setSigner(event.currentTarget.value);\n  };\n\n  const initialCodeValue = code.length > 0 ? \"// Contract Code \\n\" + JSON.stringify(code, null, 2) : \"// Contract Code\";\n  const initialStorageValue = storage ? \"// Storage Code \\n\" + JSON.stringify(storage, null, 2) : \"// Storage Code \";\n\n  return (\n    <>\n      <Navbar />\n      <div id=\"top-header\">\n        <Provider loading={loading} provider={provider} updateProvider={updateProvider} />\n        {lastLaunchedContract && <LastLaunchedContract lastLaunchedContract={lastLaunchedContract} />}\n      </div>\n      <div id=\"wallet\">\n        <h1>The George Cloney</h1>\n        <SnackbarGroup\n          launchNetwork={launchNetwork}\n          txnAddress={txnAddress}\n          snackbar={snackbar}\n          closeSnackbar={closeSnackbar}\n          error={error}\n          loading={loading}\n          loadingMessage={loadingMessage}\n        />\n        <div id=\"main-forms\">\n          <ContractForm\n            loading={loading}\n            handleContractSubmit={handleContractCodeSubmit}\n            updateContractAddress={updateContractAddress}\n            handleNetworkChange={handleContractNetworkChange}\n            network={contractNetwork}\n          />\n          <LaunchForm\n            loading={loading}\n            signer={signer}\n            updateSigner={updateSigner}\n            handleLaunchSubmit={handleContractLaunchSubmit}\n            handleNetworkChange={handleLaunchNetworkChange}\n            network={launchNetwork}\n          />\n        </div>\n        <div id=\"contract-code-editor\">\n          {/* This is because of a types issue on Ace SplitEditor \n            // @ts-ignore */}\n          <SplitEditor\n            width=\"1000px\"\n            height=\"300px\"\n            mode=\"json\"\n            theme=\"monokai\"\n            tabSize={2}\n            splits={2}\n            style={{ borderRadius: \"5px\", margin: \"0 auto\" }}\n            orientation=\"beside\"\n            value={[initialCodeValue, initialStorageValue]}\n            name=\"contract-code-editor\"\n            editorProps={{ $blockScrolling: true }}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}