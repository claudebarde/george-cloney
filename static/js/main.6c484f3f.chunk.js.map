{"version":3,"sources":["components/Editor/index.tsx","components/ContractCodeForm/index.tsx","components/ContractOriginationForm/index.tsx","components/ContractResultForm/index.tsx","components/Snackbar/Snackbar.tsx","components/SnackbarGroup/index.tsx","components/LastLaunchedContract/index.tsx","components/WizardControls/index.tsx","components/Navbar/index.tsx","utils/set-signer-method.ts","App.tsx","index.tsx"],"names":["Editor","props","code","storage","currentStep","initialCodeValue","length","JSON","stringify","initialStorageValue","id","width","height","mode","theme","tabSize","splits","style","borderRadius","margin","orientation","value","name","editorProps","$blockScrolling","ContractForm","handleNetworkChange","network","updateContractAddress","handleContractSubmit","loading","contractAddress","useForm","register","handleSubmit","selectValue","label","charAt","toUpperCase","slice","className","options","onChange","selectedOption","onSubmit","placeholder","ref","disabled","type","LaunchForm","updateSigner","handleLaunchSubmit","useState","chosenSigner","setChosenSigner","locallyUpdateSigner","e","currentTarget","onClick","htmlFor","ContractResultForm","txnAddress","launchNetwork","border","target","rel","href","SnackbarComponent","snackbar","closeSnackbar","children","duration","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","reason","elevation","variant","severity","SnackbarGroup","error","loadingMessage","LastLaunchedContract","lastLaunchedContract","Dots","signer","setCurrentStep","handleStepClick","innerText","Navbar","alt","src","setSignerMethod","contractNetwork","setLoading","showSnackbar","setLoadingMessage","setTxnAddress","handleError","a","httpClient","HttpBackend","createRequest","url","method","headers","Authorization","pkh","RemoteSigner","Tezos","setSignerProvider","message","setProvider","rpc","TezBridgeSigner","contract","originate","init","then","originationOp","address","catch","App","setError","setSigner","provider","setCode","setStorage","setLaunchNetwork","setContractNetwork","setContractAddress","setLastLaunchedContract","useEffect","localStorage","setItem","getItem","handleLaunchNetworkChange","handleContractLaunchSubmit","config","confirmationPollingTimeoutSecond","handleContractCodeSubmit","at","newContract","script","event","WizardControls","ContractCodeForm","ContractOriginationForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c484f3f.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\nimport { EditorProps } from \"./types\";\nimport { split as SplitEditor } from \"react-ace\";\n\nconst Editor = (props: EditorProps): ReactElement | null => {\n  const { code, storage, currentStep } = props;\n\n  const initialCodeValue = code.length > 0 ? \"// Contract Code \\n\" + JSON.stringify(code, null, 2) : \"// Contract Code\";\n  const initialStorageValue = storage\n    ? \"// Initial Storage Code \\n\" + JSON.stringify(storage, null, 2)\n    : \"// Initial Storage Code \";\n\n  if (currentStep !== 2) return null;\n  return (\n    <>\n      <div id=\"contract-code-editor\">\n        {/* This is because of a types issue on Ace SplitEditor \n            // @ts-ignore */}\n        <SplitEditor\n          width=\"700px\"\n          height=\"300px\"\n          mode=\"json\"\n          theme=\"monokai\"\n          tabSize={2}\n          splits={2}\n          style={{ borderRadius: \"5px\", margin: \"0 auto\" }}\n          orientation=\"beside\"\n          value={[initialCodeValue, initialStorageValue]}\n          name=\"contract-code-editor\"\n          editorProps={{ $blockScrolling: true }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Editor;\n","import React, { ReactElement } from \"react\";\nimport { ContractFormProps } from \"./types\";\nimport Select from \"react-select\";\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nconst ContractForm = (props: ContractFormProps): ReactElement | null => {\n  const {\n    handleNetworkChange,\n    network,\n    updateContractAddress,\n    handleContractSubmit,\n    loading,\n    currentStep,\n    contractAddress,\n  } = props;\n  const { register, handleSubmit } = useForm();\n\n  const selectValue = { value: network, label: network.charAt(0).toUpperCase() + network.slice(1) };\n  const options = [\n    { value: \"mainnet\", label: \"Mainnet\" },\n    { value: \"carthagenet\", label: \"Carthagenet\" },\n    { value: \"sandbox\", label: \"Sandbox\" },\n  ];\n\n  const handleChange = (selectedOption: any) => {\n    handleNetworkChange(selectedOption.value);\n  };\n\n  if (currentStep !== 1) return null;\n  return (\n    <>\n      <div id=\"dialog\">\n        <h2>Fetch Contract Code</h2>\n        <label id=\"react-select-label\">Choose Network</label>\n        <Select className=\"network-select\" options={options} value={selectValue} onChange={handleChange} />\n        <div id=\"content\">\n          <label id=\"react-select-lookup-label\">Enter Contract Address</label>\n          <div id=\"contract-code-form\">\n            <form onSubmit={handleSubmit(handleContractSubmit)}>\n              <input\n                onChange={updateContractAddress}\n                placeholder=\"Contract Address\"\n                id=\"address-input\"\n                name=\"address\"\n                ref={register}\n              />\n              <br />\n              <input\n                disabled={!contractAddress ? true : false}\n                id={`${loading ? \"show-balance-button-hovered\" : \"show-balance-button\"}`}\n                type=\"submit\"\n                value=\"Fetch\"\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContractForm;\n","import React, { ReactElement, useState } from \"react\";\nimport { LaunchFormProps } from \"./types\";\nimport Select from \"react-select\";\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nconst LaunchForm = (props: LaunchFormProps): ReactElement | null => {\n  const { updateSigner, handleNetworkChange, network, handleLaunchSubmit, loading, currentStep } = props;\n  const { register, handleSubmit } = useForm();\n  const [chosenSigner, setChosenSigner] = useState<string>(\"\");\n  const selectValue = { value: network, label: network.charAt(0).toUpperCase() + network.slice(1) };\n\n  const options = [\n    { value: \"mainnet\", label: \"Mainnet\" },\n    { value: \"carthagenet\", label: \"Carthagenet\" },\n    { value: \"sandbox\", label: \"Sandbox\" },\n  ];\n\n  const handleChange = (selectedOption: any) => {\n    handleNetworkChange(selectedOption.value);\n  };\n\n  const locallyUpdateSigner = (e: React.MouseEvent<HTMLInputElement>) => {\n    setChosenSigner(e.currentTarget.value);\n    updateSigner(e);\n  };\n\n  if (currentStep !== 3) return null;\n  return (\n    <>\n      <div id=\"dialog\">\n        <h2>Originate Contract</h2>\n        <label id=\"react-select-label\">Choose Network</label>\n        <Select\n          name=\"address\"\n          ref={register}\n          className=\"network-select\"\n          options={options}\n          value={selectValue}\n          onChange={handleChange}\n        />\n        <label id=\"react-select-signer-label\">Choose Signer</label>\n        <label className=\"signer-toolbar\">\n          {network !== \"mainnet\" && (\n            <>\n              <input onClick={locallyUpdateSigner} value=\"ephemeral\" id=\"ephemeral\" type=\"radio\" />\n              <label\n                className={chosenSigner === \"ephemeral\" ? \"signer-button-selected\" : \"signer-button\"}\n                htmlFor=\"ephemeral\"\n              >\n                Let Us Sign\n              </label>\n            </>\n          )}\n          <input onClick={locallyUpdateSigner} value=\"beacon\" id=\"beacon\" type=\"radio\" />\n          <label className={chosenSigner === \"beacon\" ? \"signer-button-selected\" : \"signer-button\"} htmlFor=\"beacon\">\n            Beacon\n          </label>\n          <input onClick={locallyUpdateSigner} value=\"tezbridge\" id=\"tezbridge\" type=\"radio\" />\n          <label\n            className={chosenSigner === \"tezbridge\" ? \"signer-button-selected\" : \"signer-button\"}\n            htmlFor=\"tezbridge\"\n          >\n            TezBridge\n          </label>\n        </label>\n        <div id=\"content\">\n          <div id=\"contract-launch-form\">\n            <form onSubmit={handleSubmit(handleLaunchSubmit)}>\n              <input disabled={loading || !chosenSigner ? true : false} id=\"show-balance-button\" type=\"submit\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LaunchForm;\n","import React, { ReactElement } from \"react\";\nimport { ContractResultFormProps } from \"./types\";\n\nconst ContractResultForm = (props: ContractResultFormProps): ReactElement | null => {\n  const { currentStep, txnAddress, launchNetwork } = props;\n  if (currentStep !== 4) return null;\n  return (\n    <>\n      <div id=\"dialog\">\n        <h2>Originate Contract</h2>\n        <label id=\"react-select-signer-label\">Originated Contract Address:</label>\n        <h4 style={{ border: \"1px solid black\", borderRadius: \"3px\", width: \"85%\" }}>{txnAddress}</h4>\n        <label id=\"react-select-signer-label\">View Originated Contract Address:</label>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://${launchNetwork}.tzstats.com/${txnAddress}`}>\n          View on TzStats\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default ContractResultForm;\n","import React, { ReactElement } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { SnackbarProps } from \"./types\";\n\nconst SnackbarComponent = (props: SnackbarProps): ReactElement => {\n  const { snackbar, closeSnackbar, type, children, duration } = props;\n\n  const handleClose = (e: any, reason: string) => {\n    if (reason !== \"clickaway\") {\n      closeSnackbar();\n    }\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={snackbar}\n      autoHideDuration={duration === \"none\" ? null : 5000}\n      onClose={handleClose}\n    >\n      <MuiAlert elevation={6} variant=\"filled\" onClose={closeSnackbar} severity={type}>\n        {children}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\nexport default SnackbarComponent;\n","import React, { ReactElement } from \"react\";\nimport Snackbar from \"../Snackbar/Snackbar\";\nimport { SnackbarGroupProps } from \"./types\";\n\nconst SnackbarGroup = (props: SnackbarGroupProps): ReactElement => {\n  const { snackbar, closeSnackbar, error, loading, loadingMessage } = props;\n\n  return (\n    <>\n      {error && !loadingMessage && (\n        <Snackbar snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"warning\">\n          <>{error}</>\n        </Snackbar>\n      )}\n      {loading && (\n        <Snackbar duration={\"none\"} snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"info\">\n          <>{loadingMessage}</>\n        </Snackbar>\n      )}\n    </>\n  );\n};\n\nexport default SnackbarGroup;\n","import React, { ReactElement } from \"react\";\nimport { LastLaunchedContractProps } from \"./types\";\nimport \"./styles.css\";\n\nconst LastLaunchedContract = (props: LastLaunchedContractProps): ReactElement => {\n  const { lastLaunchedContract } = props;\n\n  return (\n    <div className=\"last-launched-contract-div\">\n      <h3>\n        Last Launched Contract:\n        <div id=\"last-launched-contract\">\n          <h5>{lastLaunchedContract}</h5>\n        </div>\n      </h3>\n    </div>\n  );\n};\n\nexport default LastLaunchedContract;\n","import React, { ReactElement } from \"react\";\nimport { WizardControlsProps } from \"./types\";\nimport \"./styles.css\";\n\nconst Dots = (props: WizardControlsProps): ReactElement => {\n  const { code, signer, currentStep, setCurrentStep, txnAddress } = props;\n\n  const handleStepClick = (e: any) => {\n    switch (e.target.innerText) {\n      case \"1\":\n        return setCurrentStep(1);\n      case \"2\":\n        if (code.length > 0) return setCurrentStep(2);\n        break;\n      case \"3\":\n        if (code.length > 0) return setCurrentStep(3);\n        break;\n      case \"4\":\n        if (txnAddress) return setCurrentStep(4);\n        break;\n    }\n  };\n\n  return (\n    <div className=\"dots-container\">\n      <div className=\"wizard-steps\">\n        <div onClick={handleStepClick}>\n          <span className={`${code.length > 0 ? \"dot completed\" : \"dot\"} ${currentStep === 1 ? \"active\" : \"\"}`}>1</span>\n          <br />\n          Fetch Contract\n        </div>\n        <div onClick={handleStepClick}>\n          <span className={` ${code.length > 0 ? \"dot completed\" : \"dot\"} ${currentStep === 2 ? \"active\" : \"\"}`}>\n            2\n          </span>\n          <br />\n          Review Contract\n        </div>\n        <div onClick={handleStepClick}>\n          <span className={`${signer ? \"dot completed\" : \"dot\"} ${currentStep === 3 ? \"active\" : \"\"}`}>3</span>\n          <br />\n          Deploy New Contract\n        </div>\n        <div onClick={handleStepClick}>\n          <span className={`${txnAddress ? \"dot completed\" : \"dot\"} ${currentStep === 4 ? \"active\" : \"\"}`}>4</span>\n          <br />\n          View New Contract\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dots;\n","import React, { ReactElement } from \"react\";\nimport \"./styles.css\";\n\nconst Navbar = (): ReactElement => {\n  return (\n    <div className=\"navbar\">\n      <div className=\"left-container\">\n        <img height=\"55\" width=\"60\" alt=\"George Cloney logo\" src=\"george-cloney.png\" />\n      </div>\n      <div className=\"right-container\">\n        <a href=\"https://github.com/ecadlabs/george-cloney\">\n          <img alt=\"Github logo\" height=\"55\" width=\"100\" src=\"github.jpg\" />\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Navbar;\n","import { HttpBackend } from \"@taquito/http-utils\";\nimport { RemoteSigner } from \"@taquito/remote-signer\";\n// import { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { TezBridgeSigner } from \"@taquito/tezbridge-signer\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { MichelsonV1Expression } from \"@taquito/rpc\";\nimport { Dispatch, SetStateAction } from \"react\";\n\nconst setSignerMethod = async (\n  signer: string,\n  contractNetwork: string,\n  launchNetwork: string,\n  code?: any,\n  storage?: any,\n  setLoading?: Dispatch<SetStateAction<boolean>>,\n  showSnackbar?: Dispatch<SetStateAction<boolean>>,\n  setLoadingMessage?: Dispatch<SetStateAction<string>>,\n  setTxnAddress?: Dispatch<SetStateAction<string>>,\n  handleError?: (error: any) => void\n) => {\n  switch (signer) {\n    case \"ephemeral\":\n      try {\n        const httpClient = new HttpBackend();\n        const { id, pkh } = await httpClient.createRequest({\n          url: `https://api.tez.ie/keys/${launchNetwork ? launchNetwork : contractNetwork}/ephemeral`,\n          method: \"POST\",\n          headers: { Authorization: \"Bearer taquito-example\" },\n        });\n        const signer = new RemoteSigner(\n          pkh,\n          `https://api.tez.ie/keys/${launchNetwork ? launchNetwork : contractNetwork}/ephemeral/${id}/`,\n          {\n            headers: { Authorization: \"Bearer taquito-example\" },\n          }\n        );\n        await Tezos.setSignerProvider(signer);\n      } catch (e) {\n        handleError && handleError(e.message);\n      }\n      break;\n\n    case \"tezbridge\":\n      Tezos.setProvider({\n        rpc: `https://api.tez.ie/rpc/${launchNetwork ? launchNetwork : contractNetwork}`,\n        signer: new TezBridgeSigner(),\n      });\n      // Originate a new contract\n      Tezos.contract\n        .originate({\n          code: code as MichelsonV1Expression[],\n          init: storage as MichelsonV1Expression,\n        })\n        .then((originationOp) => {\n          return originationOp.contract();\n        })\n        .then((contract) => {\n          // Remove contract launch snackbar message\n          setLoading && setLoading(false);\n          showSnackbar && showSnackbar(false);\n          // Add block explorer snackbar message\n          setLoadingMessage && setLoadingMessage(\"\");\n          setTxnAddress && setTxnAddress(contract.address);\n          showSnackbar && showSnackbar(true);\n        })\n        .catch((e) => {\n          throw e;\n        });\n      break;\n\n    case \"beacon\":\n      // const wallet = new BeaconWallet({ name: 'test' })\n      // await wallet.requestPermissions()\n      // this.taquito.setProvider({ rpc: this.taquito.rpc, wallet });\n      // }\n      break;\n\n    default:\n      break;\n  }\n};\n\nexport default setSignerMethod;\n","import React, { useState, ReactElement, useEffect } from \"react\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { MichelsonV1Expression } from \"@taquito/rpc\";\nimport Editor from \"./components/Editor\";\nimport ContractCodeForm from \"./components/ContractCodeForm\";\nimport ContractOriginationForm from \"./components/ContractOriginationForm\";\nimport ContractResultForm from \"./components/ContractResultForm\";\nimport SnackbarGroup from \"./components/SnackbarGroup\";\nimport LastLaunchedContract from \"./components/LastLaunchedContract\";\nimport WizardControls from \"./components/WizardControls\";\nimport Navbar from \"./components/Navbar\";\nimport setSignerMethod from \"./utils/set-signer-method\";\nimport \"./App.css\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nconst App: React.FC = (): ReactElement => {\n  const [currentStep, setCurrentStep] = useState<number>(1);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingMessage, setLoadingMessage] = useState<string>(\"\");\n  const [error, setError] = useState<string>(\"\");\n  const [snackbar, showSnackbar] = useState<boolean>(false);\n  const [signer, setSigner] = useState<string>(\"\");\n  const [provider, setProvider] = useState<string>(\"\");\n  const [code, setCode] = useState<MichelsonV1Expression[]>([]);\n  const [storage, setStorage] = useState<MichelsonV1Expression | string>();\n  const [launchNetwork, setLaunchNetwork] = useState<string>(\"mainnet\");\n  const [contractNetwork, setContractNetwork] = useState<string>(\"mainnet\");\n  const [contractAddress, setContractAddress] = useState<string>(\"\");\n  const [txnAddress, setTxnAddress] = useState<string>(\"\");\n  const [lastLaunchedContract, setLastLaunchedContract] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (txnAddress) {\n      localStorage.setItem(\"lastLaunchedContract\", txnAddress);\n    }\n    const lastLaunchedContract = localStorage.getItem(\"lastLaunchedContract\") as string;\n    setLastLaunchedContract(lastLaunchedContract);\n  }, [txnAddress]);\n\n  const handleError = (error: any): void => {\n    setLoading(false);\n    showSnackbar(false);\n    setLoadingMessage(\"\");\n    setError(error?.message ?? error);\n    showSnackbar(true);\n  };\n\n  const handleLaunchNetworkChange = async (network: string): Promise<void> => {\n    // Empty provider if network is sandbox so that user can provide a local node address\n    if (network !== \"sandbox\") {\n      await Tezos.setProvider({ rpc: `https://api.tez.ie/rpc/${network}` });\n      setProvider(`https://api.tez.ie/rpc/${network}`);\n    }\n    setLaunchNetwork(network);\n  };\n\n  const handleContractNetworkChange = (network: string): void => {\n    // Empty provider if network is sandbox so that user can provide a local node address\n    if (network === \"sandbox\") {\n      setProvider(\"\");\n    }\n    setProvider(`https://api.tez.ie/rpc/${network}`);\n    setContractNetwork(network);\n  };\n\n  const handleContractLaunchSubmit = async (): Promise<void> => {\n    // Set snackbar\n    setLoading(true);\n    setLoadingMessage(\"Launching contract...\");\n    showSnackbar(true);\n    // Make sure provider is updated to reflect launch network in the UI\n    setProvider(`https://api.tez.ie/rpc/${launchNetwork}`);\n    // Ensure provider is set to Launch Contract div's desired network\n    await Tezos.setProvider({\n      config: { confirmationPollingTimeoutSecond: 60 },\n      rpc: `https://api.tez.ie/rpc/${launchNetwork}`,\n    });\n    await setSignerMethod(\n      signer,\n      contractNetwork,\n      launchNetwork,\n      code,\n      storage,\n      setLoading,\n      showSnackbar,\n      setLoadingMessage,\n      setTxnAddress,\n      handleError\n    );\n    // Tezbridge is originated in setSignerMethod function\n    if (signer !== \"tezbridge\") {\n      // Originate a new contract\n      Tezos.contract\n        .originate({\n          code: code as MichelsonV1Expression[],\n          init: storage as MichelsonV1Expression,\n        })\n        .then((originationOp) => {\n          return originationOp.contract();\n        })\n        .then((contract) => {\n          // Remove contract launch snackbar message\n          setLoading(false);\n          showSnackbar(false);\n          // Add block explorer snackbar message\n          setLoadingMessage(\"\");\n          setTxnAddress(contract.address);\n          setCurrentStep(4);\n        })\n        .catch((error) => {\n          setLoading(false);\n          showSnackbar(false);\n          setLoadingMessage(\"\");\n          setError(error?.message ?? error);\n          showSnackbar(true);\n        });\n    }\n  };\n\n  const handleContractCodeSubmit = async (): Promise<any> => {\n    // Grab contracts code from the blockchain and add code to the editors\n    setLoading(true);\n    setLoadingMessage(\"Loading contract code...\");\n    showSnackbar(true);\n    await Tezos.setProvider({ rpc: provider });\n\n    // Call contract and get code\n    const newContract = await Tezos.contract.at(contractAddress);\n    setCode(newContract.script.code);\n    setStorage(newContract.script.storage);\n    setCurrentStep(2);\n    setContractAddress(\"\");\n    setLoadingMessage(\"\");\n    setLoading(false);\n  };\n\n  const closeSnackbar = (): void => {\n    // Remove snackbar\n    showSnackbar(false);\n  };\n\n  const updateContractAddress = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the contract address that we'll be pulling data from\n    setContractAddress(event.target.value);\n  };\n\n  const updateSigner = async (event: React.MouseEvent<HTMLInputElement>): Promise<any> => {\n    // Update the signer method\n    setSigner(event.currentTarget.value);\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"top-header\">\n        {lastLaunchedContract && <LastLaunchedContract lastLaunchedContract={lastLaunchedContract} />}\n      </div>\n      <div id=\"wallet\">\n        <div className=\"title-group\">\n          <h1>The George Cloney</h1>\n          <h4>\n            George Cloney, being the gentleman he is, will take any Tezos Smart Contract and clone it for you. He even\n            allows you to edit the cloned contracts storage state! Great for testing and exploring.\n          </h4>\n        </div>\n        <SnackbarGroup\n          snackbar={snackbar}\n          closeSnackbar={closeSnackbar}\n          error={error}\n          loading={loading}\n          loadingMessage={loadingMessage}\n        />\n        <WizardControls\n          txnAddress={txnAddress}\n          setCurrentStep={setCurrentStep}\n          currentStep={currentStep}\n          signer={signer}\n          code={code}\n        />\n        <div id=\"main-forms\">\n          <ContractCodeForm\n            contractAddress={contractAddress}\n            currentStep={currentStep}\n            loading={loading}\n            handleContractSubmit={handleContractCodeSubmit}\n            updateContractAddress={updateContractAddress}\n            handleNetworkChange={handleContractNetworkChange}\n            network={contractNetwork}\n          />\n          <ContractOriginationForm\n            currentStep={currentStep}\n            setCurrentStep={setCurrentStep}\n            loading={loading}\n            signer={signer}\n            updateSigner={updateSigner}\n            handleLaunchSubmit={handleContractLaunchSubmit}\n            handleNetworkChange={handleLaunchNetworkChange}\n            network={launchNetwork}\n          />\n          <ContractResultForm txnAddress={txnAddress} currentStep={currentStep} launchNetwork={launchNetwork} />\n        </div>\n        <Editor currentStep={currentStep} code={code} storage={storage} />\n      </div>\n      <div className=\"built-with-taquito-logo\">\n        <img height=\"56\" width=\"128\" alt=\"Built with Taquito logo\" src=\"built-with-taquito.png\" />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}