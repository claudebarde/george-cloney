{"version":3,"sources":["components/Editor/index.tsx","components/Provider/index.tsx","components/ContractCodeForm/index.tsx","components/OriginateContractForm/index.tsx","components/Snackbar/Snackbar.tsx","components/SnackbarGroup/index.tsx","components/LastLaunchedContract/index.tsx","components/Navbar/index.tsx","utils/set-signer-method.ts","App.tsx","index.tsx"],"names":["Editor","props","code","storage","currentStep","initialCodeValue","length","JSON","stringify","initialStorageValue","id","width","height","mode","theme","tabSize","splits","style","borderRadius","margin","orientation","value","name","editorProps","$blockScrolling","Provider","useForm","register","handleSubmit","useState","providerMsg","setProviderMsg","snackbar","showSnackbar","updateProvider","provider","loading","onSubmit","data","a","rpc","closeSnackbar","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","elevation","variant","severity","onChange","ref","disabled","type","ContractForm","handleNetworkChange","network","updateContractAddress","handleContractSubmit","selectValue","label","charAt","toUpperCase","slice","className","options","selectedOption","placeholder","LaunchForm","signer","updateSigner","handleLaunchSubmit","onClick","htmlFor","SnackbarComponent","children","duration","e","reason","SnackbarGroup","txnAddress","error","loadingMessage","launchNetwork","target","rel","href","LastLaunchedContract","lastLaunchedContract","Navbar","alt","src","setSignerMethod","contractNetwork","setLoading","setLoadingMessage","setTxnAddress","setError","httpClient","HttpBackend","createRequest","url","method","headers","Authorization","pkh","RemoteSigner","Tezos","setSignerProvider","message","setProvider","TezBridgeSigner","contract","originate","init","then","originationOp","address","catch","App","setCurrentStep","setSigner","setCode","setStorage","setLaunchNetwork","setContractNetwork","contractAddress","setContractAddress","setLastLaunchedContract","useEffect","localStorage","setItem","getItem","handleLaunchNetworkChange","handleContractLaunchSubmit","handleContractCodeSubmit","at","newContract","script","event","currentTarget","ContractCodeForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b63df3b3.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\nimport { EditorProps } from \"./types\";\nimport { split as SplitEditor } from \"react-ace\";\n\nconst Editor = (props: EditorProps): ReactElement | null => {\n  const { code, storage, currentStep } = props;\n\n  const initialCodeValue = code.length > 0 ? \"// Contract Code \\n\" + JSON.stringify(code, null, 2) : \"// Contract Code\";\n  const initialStorageValue = storage\n    ? \"// Initial Storage Code \\n\" + JSON.stringify(storage, null, 2)\n    : \"// Initial Storage Code \";\n\n  if (currentStep !== 1) return null;\n  return (\n    <>\n      <div id=\"contract-code-editor\">\n        {/* This is because of a types issue on Ace SplitEditor \n            // @ts-ignore */}\n        <SplitEditor\n          width=\"700px\"\n          height=\"300px\"\n          mode=\"json\"\n          theme=\"monokai\"\n          tabSize={2}\n          splits={2}\n          style={{ borderRadius: \"5px\", margin: \"0 auto\" }}\n          orientation=\"beside\"\n          value={[initialCodeValue, initialStorageValue]}\n          name=\"contract-code-editor\"\n          editorProps={{ $blockScrolling: true }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Editor;\n","import React, { useState, ReactElement } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { useForm } from \"react-hook-form\";\nimport { ProviderProps } from \"./types\";\nimport \"../../App.css\";\n\nconst Provider: any = (props: ProviderProps): ReactElement => {\n  const { register, handleSubmit } = useForm();\n  const [providerMsg, setProviderMsg] = useState(\"\");\n  const [snackbar, showSnackbar] = useState(false);\n  const { updateProvider, provider, loading } = props;\n\n  const onSubmit = async (data: any) => {\n    if (data.rpc) {\n      updateProvider(data.rpc);\n    }\n    setProviderMsg(\"Provider set and key file is importing\");\n    showSnackbar(true);\n  };\n\n  const closeSnackbar = () => {\n    showSnackbar(false);\n  };\n\n  return (\n    <div id=\"rpc\">\n      <h3>Provider</h3>\n      {providerMsg && (\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={snackbar}\n          autoHideDuration={3000}\n          onClose={closeSnackbar}\n        >\n          <MuiAlert elevation={6} variant=\"filled\" onClose={closeSnackbar} severity=\"success\">\n            {providerMsg}\n          </MuiAlert>\n        </Snackbar>\n      )}\n      <div id=\"rpc-dialog\">\n        <div id=\"rpc-content\">\n          <div id=\"balance-form\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <input\n                onChange={updateProvider}\n                value={provider || \"https://api.tez.ie/rpc/carthagenet\"}\n                id=\"rpc-input\"\n                name=\"rpc\"\n                ref={register}\n              />\n              <br />\n              <input disabled={loading ? true : false} id=\"show-balance-button\" type=\"submit\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Provider;\n","import React, { ReactElement } from \"react\";\nimport { ContractFormProps } from \"./types\";\nimport Select from \"react-select\";\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nconst ContractForm = (props: ContractFormProps): ReactElement | null => {\n  const { handleNetworkChange, network, updateContractAddress, handleContractSubmit, loading, currentStep } = props;\n  const { register, handleSubmit } = useForm();\n\n  const selectValue = { value: network, label: network.charAt(0).toUpperCase() + network.slice(1) };\n  const options = [\n    { value: \"mainnet\", label: \"Mainnet\" },\n    { value: \"carthagenet\", label: \"Carthagenet\" },\n    { value: \"sandbox\", label: \"Sandbox\" },\n  ];\n\n  const handleChange = (selectedOption: any) => {\n    handleNetworkChange(selectedOption.value);\n  };\n\n  if (currentStep !== 1) return null;\n  return (\n    <>\n      <div id=\"dialog\">\n        <h2>Get Contract Code</h2>\n        <Select className=\"network-select\" options={options} value={selectValue} onChange={handleChange} />\n        <div id=\"content\">\n          <div id=\"contract-code-form\">\n            <form onSubmit={handleSubmit(handleContractSubmit)}>\n              <input\n                onChange={updateContractAddress}\n                placeholder=\"Contract Address\"\n                id=\"address-input\"\n                name=\"address\"\n                ref={register}\n              />\n              <br />\n              <input disabled={loading ? true : false} id=\"show-balance-button\" type=\"submit\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContractForm;\n","import React, { ReactElement } from \"react\";\nimport { LaunchFormProps } from \"./types\";\nimport Select from \"react-select\";\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nconst LaunchForm = (props: LaunchFormProps): ReactElement | null => {\n  const { signer, updateSigner, handleNetworkChange, network, handleLaunchSubmit, loading, currentStep } = props;\n  const { register, handleSubmit } = useForm();\n\n  const selectValue = { value: network, label: network.charAt(0).toUpperCase() + network.slice(1) };\n\n  const options = [\n    { value: \"mainnet\", label: \"Mainnet\" },\n    { value: \"carthagenet\", label: \"Carthagenet\" },\n    { value: \"sandbox\", label: \"Sandbox\" },\n  ];\n\n  const handleChange = (selectedOption: any) => {\n    handleNetworkChange(selectedOption.value);\n  };\n\n  if (currentStep !== 2) return null;\n  return (\n    <>\n      <div id=\"dialog\">\n        <h2>Originate Contract</h2>\n        <Select\n          name=\"address\"\n          ref={register}\n          className=\"network-select\"\n          options={options}\n          value={selectValue}\n          onChange={handleChange}\n        />\n        <label className=\"signer-toolbar\">\n          {network !== \"mainnet\" && (\n            <>\n              <input onClick={updateSigner} value=\"ephemeral\" id=\"ephemeral\" type=\"radio\" />\n              <label\n                className={signer === \"ephemeral\" ? \"signer-button-selected\" : \"signer-button\"}\n                htmlFor=\"ephemeral\"\n              >\n                Ephemeral Key\n              </label>\n            </>\n          )}\n          <input onClick={updateSigner} value=\"beacon\" id=\"beacon\" type=\"radio\" />\n          <label className={signer === \"beacon\" ? \"signer-button-selected\" : \"signer-button\"} htmlFor=\"beacon\">\n            Beacon\n          </label>\n          <input onClick={updateSigner} value=\"tezbridge\" id=\"tezbridge\" type=\"radio\" />\n          <label className={signer === \"tezbridge\" ? \"signer-button-selected\" : \"signer-button\"} htmlFor=\"tezbridge\">\n            TezBridge\n          </label>\n        </label>\n        <div id=\"content\">\n          <div id=\"contract-launch-form\">\n            <form onSubmit={handleSubmit(handleLaunchSubmit)}>\n              <input\n                disabled={loading || network === \"Select A Network...\" ? true : false}\n                id=\"show-balance-button\"\n                type=\"submit\"\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LaunchForm;\n","import React, { ReactElement } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { SnackbarProps } from \"./types\";\n\nconst SnackbarComponent = (props: SnackbarProps): ReactElement => {\n  const { snackbar, closeSnackbar, type, children, duration } = props;\n\n  const handleClose = (e: any, reason: string) => {\n    if (reason !== \"clickaway\") {\n      closeSnackbar();\n    }\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={snackbar}\n      autoHideDuration={duration === \"none\" ? null : 5000}\n      onClose={handleClose}\n    >\n      <MuiAlert elevation={6} variant=\"filled\" onClose={closeSnackbar} severity={type}>\n        {children}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\nexport default SnackbarComponent;\n","import React, { ReactElement } from \"react\";\nimport Snackbar from \"../Snackbar/Snackbar\";\nimport { SnackbarGroupProps } from \"./types\";\n\nconst SnackbarGroup = (props: SnackbarGroupProps): ReactElement => {\n  const { txnAddress, snackbar, closeSnackbar, error, loading, loadingMessage, launchNetwork } = props;\n\n  return (\n    <>\n      {txnAddress && !loadingMessage && (\n        <Snackbar duration={5000} snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"success\">\n          <>\n            Launched new contract at {txnAddress}\n            <br />\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://${launchNetwork}.tzstats.com/${txnAddress}`}>\n              View on TzStats\n            </a>\n          </>\n        </Snackbar>\n      )}\n      {error && !loadingMessage && (\n        <Snackbar snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"warning\">\n          <>{error}</>\n        </Snackbar>\n      )}\n      {loading && (\n        <Snackbar duration={\"none\"} snackbar={snackbar} closeSnackbar={closeSnackbar} type=\"info\">\n          <>{loadingMessage}</>\n        </Snackbar>\n      )}\n    </>\n  );\n};\n\nexport default SnackbarGroup;\n","import React, { ReactElement } from \"react\";\nimport { LastLaunchedContractProps } from \"./types\";\nimport \"./styles.css\";\n\nconst LastLaunchedContract = (props: LastLaunchedContractProps): ReactElement => {\n  const { lastLaunchedContract } = props;\n\n  return (\n    <div className=\"last-launched-contract-div\">\n      <h3>\n        Last Launched Contract:\n        <div id=\"last-launched-contract\">\n          <h5>{lastLaunchedContract}</h5>\n        </div>\n      </h3>\n    </div>\n  );\n};\n\nexport default LastLaunchedContract;\n","import React, { ReactElement } from \"react\";\nimport \"./styles.css\";\n\nconst Navbar = (): ReactElement => {\n  return (\n    <div className=\"navbar\">\n      <div className=\"left-container\">\n        <a href=\"https://github.com/ecadlabs/taquito\">\n          <img height=\"45\" width=\"150\" alt=\"Taquito logo\" src=\"taquito.png\" />\n        </a>\n      </div>\n      <div className=\"right-container\">\n        <a href=\"https://github.com/ecadlabs/bjm\">\n          <img alt=\"Github logo\" height=\"55\" width=\"100\" src=\"github.jpg\" />\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Navbar;\n","import { HttpBackend } from \"@taquito/http-utils\";\nimport { RemoteSigner } from \"@taquito/remote-signer\";\n// import { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { TezBridgeSigner } from \"@taquito/tezbridge-signer\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { MichelsonV1Expression } from \"@taquito/rpc\";\nimport { Dispatch, SetStateAction } from \"react\";\n\nconst setSignerMethod = async (\n  signer: string,\n  contractNetwork: string,\n  launchNetwork: string,\n  code?: any,\n  storage?: any,\n  setLoading?: Dispatch<SetStateAction<boolean>>,\n  showSnackbar?: Dispatch<SetStateAction<boolean>>,\n  setLoadingMessage?: Dispatch<SetStateAction<string>>,\n  setTxnAddress?: Dispatch<SetStateAction<string>>,\n  setError?: Dispatch<SetStateAction<string>>\n) => {\n  switch (signer) {\n    case \"ephemeral\":\n      try {\n        const httpClient = new HttpBackend();\n        const { id, pkh } = await httpClient.createRequest({\n          url: `https://api.tez.ie/keys/${launchNetwork ? launchNetwork : contractNetwork}/ephemeral`,\n          method: \"POST\",\n          headers: { Authorization: \"Bearer taquito-example\" },\n        });\n        const signer = new RemoteSigner(\n          pkh,\n          `https://api.tez.ie/keys/${launchNetwork ? launchNetwork : contractNetwork}/ephemeral/${id}/`,\n          {\n            headers: { Authorization: \"Bearer taquito-example\" },\n          }\n        );\n        await Tezos.setSignerProvider(signer);\n      } catch (e) {\n        setError && setError(e.message);\n      }\n      break;\n\n    case \"tezbridge\":\n      Tezos.setProvider({\n        rpc: `https://api.tez.ie/rpc/${launchNetwork ? launchNetwork : contractNetwork}`,\n        signer: new TezBridgeSigner(),\n      });\n      // Originate a new contract\n      Tezos.contract\n        .originate({\n          code: code as MichelsonV1Expression[],\n          init: storage as MichelsonV1Expression,\n        })\n        .then((originationOp) => {\n          return originationOp.contract();\n        })\n        .then((contract) => {\n          // Remove contract launch snackbar message\n          setLoading && setLoading(false);\n          showSnackbar && showSnackbar(false);\n          // Add block explorer snackbar message\n          setLoadingMessage && setLoadingMessage(\"\");\n          setTxnAddress && setTxnAddress(contract.address);\n          showSnackbar && showSnackbar(true);\n        })\n        .catch((e) => {\n          throw e;\n        });\n      break;\n\n    case \"beacon\":\n      // const wallet = new BeaconWallet({ name: 'test' })\n      // await wallet.requestPermissions()\n      // this.taquito.setProvider({ rpc: this.taquito.rpc, wallet });\n      // }\n      break;\n\n    default:\n      break;\n  }\n};\n\nexport default setSignerMethod;\n","import React, { useState, ReactElement, useEffect } from \"react\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { MichelsonV1Expression } from \"@taquito/rpc\";\nimport Editor from \"./components/Editor\";\nimport Provider from \"./components/Provider\";\nimport ContractCodeForm from \"./components/ContractCodeForm\";\nimport LaunchContractForm from \"./components/OriginateContractForm\";\nimport SnackbarGroup from \"./components/SnackbarGroup\";\nimport LastLaunchedContract from \"./components/LastLaunchedContract\";\nimport Navbar from \"./components/Navbar\";\nimport setSignerMethod from \"./utils/set-signer-method\";\nimport \"./App.css\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nconst App: React.FC = (): ReactElement => {\n  const [currentStep, setCurrentStep] = useState<number>(2);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingMessage, setLoadingMessage] = useState<string>(\"\");\n  const [error, setError] = useState<string>(\"\");\n  const [snackbar, showSnackbar] = useState<boolean>(false);\n  const [signer, setSigner] = useState<string>(\"\");\n  const [provider, setProvider] = useState<string>(\"\");\n  const [code, setCode] = useState<MichelsonV1Expression[]>([]);\n  const [storage, setStorage] = useState<MichelsonV1Expression | string>();\n  const [launchNetwork, setLaunchNetwork] = useState<string>(\"Select A Network...\");\n  const [contractNetwork, setContractNetwork] = useState<string>(\"Select A Network...\");\n  const [contractAddress, setContractAddress] = useState<string>(\"\");\n  const [txnAddress, setTxnAddress] = useState<string>(\"\");\n  const [lastLaunchedContract, setLastLaunchedContract] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (txnAddress) {\n      localStorage.setItem(\"lastLaunchedContract\", txnAddress);\n    }\n    const lastLaunchedContract = localStorage.getItem(\"lastLaunchedContract\") as string;\n    setLastLaunchedContract(lastLaunchedContract);\n  }, [txnAddress]);\n\n  const handleLaunchNetworkChange = async (network: string): Promise<void> => {\n    // Empty provider if network is sandbox so that user can provide a local node address\n    if (network !== \"sandbox\") {\n      await Tezos.setProvider({ rpc: `https://api.tez.ie/rpc/${network}` });\n      setProvider(`https://api.tez.ie/rpc/${network}`);\n    }\n    setLaunchNetwork(network);\n  };\n\n  const handleContractNetworkChange = (network: string): void => {\n    // Empty provider if network is sandbox so that user can provide a local node address\n    if (network === \"sandbox\") {\n      setProvider(\"\");\n    }\n    setProvider(`https://api.tez.ie/rpc/${network}`);\n    setContractNetwork(network);\n  };\n\n  const handleContractLaunchSubmit = async (): Promise<void> => {\n    // Set snackbar\n    setLoading(true);\n    setLoadingMessage(\"Launching contract...\");\n    showSnackbar(true);\n    // Make sure provider is updated to reflect launch network in the UI\n    setProvider(`https://api.tez.ie/rpc/${launchNetwork}`);\n    // Ensure provider is set to Launch Contract div's desired network\n    await Tezos.setProvider({ rpc: `https://api.tez.ie/rpc/${launchNetwork}` });\n    await setSignerMethod(\n      signer,\n      contractNetwork,\n      launchNetwork,\n      code,\n      storage,\n      setLoading,\n      showSnackbar,\n      setLoadingMessage,\n      setTxnAddress,\n      setError\n    );\n    // Tezbridge is originated in setSignerMethod function\n    if (signer !== \"tezbridge\") {\n      // Originate a new contract\n      Tezos.contract\n        .originate({\n          code: code as MichelsonV1Expression[],\n          init: storage as MichelsonV1Expression,\n        })\n        .then((originationOp) => {\n          return originationOp.contract();\n        })\n        .then((contract) => {\n          // Remove contract launch snackbar message\n          setLoading(false);\n          showSnackbar(false);\n          // Add block explorer snackbar message\n          setLoadingMessage(\"\");\n          setTxnAddress(contract.address);\n          showSnackbar(true);\n        })\n        .catch((e) => setError(e));\n    }\n  };\n\n  const handleContractCodeSubmit = async (): Promise<any> => {\n    // Grab contracts code from the blockchain and add code to the editors\n    setLoading(true);\n    setLoadingMessage(\"Loading contract code...\");\n    showSnackbar(true);\n    await Tezos.setProvider({ rpc: provider });\n\n    // Call contract and get code\n    const newContract = await Tezos.contract.at(contractAddress);\n    setCode(newContract.script.code);\n    setStorage(newContract.script.storage);\n    setLoadingMessage(\"\");\n    setLoading(false);\n  };\n\n  const closeSnackbar = (): void => {\n    // Remove snackbar\n    showSnackbar(false);\n  };\n\n  const updateProvider = async (event: React.ChangeEvent<HTMLInputElement>): Promise<void> => {\n    // Update provider node to use to push/pull data from the blockchain\n    setProvider(event.target.value);\n  };\n\n  const updateContractAddress = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the contract address that we'll be pulling data from\n    setContractAddress(event.target.value);\n  };\n\n  const updateSigner = async (event: React.MouseEvent<HTMLInputElement>): Promise<any> => {\n    // Update the signer method\n    setSigner(event.currentTarget.value);\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div id=\"top-header\">\n        <Provider loading={loading} provider={provider} updateProvider={updateProvider} />\n        {lastLaunchedContract && <LastLaunchedContract lastLaunchedContract={lastLaunchedContract} />}\n      </div>\n      <div id=\"wallet\">\n        <h1>The George Cloney</h1>\n        <SnackbarGroup\n          launchNetwork={launchNetwork}\n          txnAddress={txnAddress}\n          snackbar={snackbar}\n          closeSnackbar={closeSnackbar}\n          error={error}\n          loading={loading}\n          loadingMessage={loadingMessage}\n        />\n        <div id=\"main-forms\">\n          <ContractCodeForm\n            contractAddress={contractAddress}\n            currentStep={currentStep}\n            loading={loading}\n            handleContractSubmit={handleContractCodeSubmit}\n            updateContractAddress={updateContractAddress}\n            handleNetworkChange={handleContractNetworkChange}\n            network={contractNetwork}\n          />\n          <LaunchContractForm\n            currentStep={currentStep}\n            setCurrentStep={setCurrentStep}\n            loading={loading}\n            signer={signer}\n            updateSigner={updateSigner}\n            handleLaunchSubmit={handleContractLaunchSubmit}\n            handleNetworkChange={handleLaunchNetworkChange}\n            network={launchNetwork}\n          />\n        </div>\n        <span className={code.length > 0 ? \"dot active\" : \"dot\"}></span>\n        <span className={launchNetwork !== \"Select A Network...\" && signer ? \"dot active\" : \"dot\"}></span>\n        <Editor setCurrentStep={setCurrentStep} currentStep={currentStep} code={code} storage={storage} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}